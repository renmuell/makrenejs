{"version":3,"sources":["makrene.js"],"names":["e","exports","module","define","amd","f","window","global","self","Makrene","t","n","r","s","o","u","a","require","i","Error","call","length","1","_dereq_","version","Vertex","Makrene_Vertex","data","vertex","Object","create","prototype","assign","edges","faces","neighbors","isVertex","value","Edge","Makrene_Edge","edge","vertices","isEdge","Face","Makrene_Face","face","isFace","Graph","Makrene_Graph","graph","_onChangeCallbacks","_suppressEventFires","addVertex","push","emitChange","action","newObject","addEdge","addFace","forEach","fn","onChange","event","isGraph","2","Circle","Grid","Ki","Search","Visualizer","CircleFullscreen","../vendorJs/polyfill","./base/makrene.base","./graph/makrene.graph.circle","./graph/makrene.graph.grid","./ki/makrene.ki.circle","./search/makrene.search","./visualizer/makrene.visualizer","./visualizer/makrene.visualizer.circle","./visualizer/makrene.visualizer.circleFullscreen","./visualizer/makrene.visualizer.grid","3","getIndex","position","level","numVertexOnLevel","getPositionLevel","index","Math","floor","linkWithNeighborVertex","neighbor","createEdge","filter","includes","createFace","v1","v2","id","linkEdgeWithVertexEdges","v3","min","linkFaceWithVertexFaces","first","calculateVertexDegree","levelPos","levelDegreeOffset","Makrene_Circle","config","_numCircleLevels","_circleLength","numCircleLevels","get","isEmpty","undefined","center","last","arguments","v","addVertexAt","pop","object","removeVertex","removedObject","shift","removedVertex","indexZeroVertices","j","degree","k","unshift","shouldIncreaseLevelAfter","oldLength","indexLastVertices","fill","start","end","max","pos","expandFromOutside","number","expandFromInside","collapseFromOutside","deletedLevel","collapseFromInside","clear","searchElement","vertexAt","vertexAtIndex","positionLevel","facesAt","getFacesLevelArray","indexOf","i2","levelIndex","aboveLevelVertex","indexNext","vertexLevelIndex","lastLevelVertexes","index1","index2","linkWithLevelBelowVertexes","aboveLevelVertexes","linkWithLevelAboveVertexes","removeVertexFrom","splice","vertexIndex","callback","levels","item","res","map","toString","../base/makrene.base","4","Dir","rows","cols","init","createVertexes","linkVertexes","createEdges","linkEdges","createFaces","linkFaces","c","row","col","v4","5","circle","OriginalLevel","step","a1","a2","angle","abs","angle2","l1","l2","6","DepthFirstSearch","distance","visited","newVisited","pushArray","visit","BreadthFirstSearch","nextVertices","BreadthFirstSearchIterate","lastVisit","Number","MAX_VALUE","Date","now","visitedAll","next","7","base","context","offsetX","width","vertexWidth","offsetY","height","vertexHeight","cos","levelOffset","sin","./makrene.visualizer","8","edgeOfView","rect","deg","twoPI","PI","theta","region","rectAtan","atan2","tanTheta","tan","edgePoint","x","y","xFactor","yFactor","padding","9","offset","margin","10","drawText","content","color","lineHeight","measureText","fillStyle","fillRect","strokeStyle","fillText","getPosX","getPosY","lineColor","vertexColor","faceColor","lineWidth","drawFaces","drawEdges","drawVertices","drawFacesDebugText","drawEdgesDebugText","drawVertexDebugText","getVertexDebugText","random","isCallable","obj","constructor","apply","beginPath","moveTo","lineTo","stroke","centerX","centerY","11","target","TypeError","output","source","nextKey","hasOwnProperty","Array","O","this","len","parseInt","currentElement"],"mappings":"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","file":"makrene-min.js","sourcesContent":["!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Makrene=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n/*global module */\r\n\r\n/**\r\n *  Core components of graph library.\r\n */\r\nvar Makrene = {\r\n\r\n  /**\r\n   *  Current Version of library\r\n   *  @public\r\n   *  @type {string}\r\n   */\r\n  version : '0.1.0',\r\n\r\n  /**\r\n   *  The factory Vertex(), create an new vertex object.\r\n   * \r\n   *  A vertex is a fundamental element of a graph. It represent an node which can hold data and\r\n   *  can be linked to create a graph.\r\n   *\r\n   *  Syntax:\r\n   *  var vertex = Makrene.Vertex();\r\n   *\r\n   *  @public\r\n   *  @param {object} data - The data of the vertex\r\n   *  @return {Makrene.Vertex} - New vertex object\r\n   */\r\n  Vertex: function Makrene_Vertex (data) {\r\n\r\n    var vertex = Object.create(Makrene_Vertex.prototype, {});\r\n\r\n    return Object.assign(vertex, {\r\n      edges      : [],\r\n      faces      : [],\r\n      neighbors  : [],\r\n      data       : data || {}\r\n    });\r\n  },\r\n\r\n  /**\r\n   *  The isVertex() method determines whether the passed value is an Vertex object.\r\n   *\r\n   *  Syntax:\r\n   *  Makrene.isVertex(value);\r\n   *  \r\n   *  @param {object} value - The value to be checked.\r\n   *  @return {bool} - true if the value is an Vertex; otherwise, false.\r\n   */\r\n  isVertex: function (value){\r\n    if (typeof value === 'undefined') { return false; }\r\n    return value instanceof Makrene.Vertex;\r\n  },\r\n\r\n  /**\r\n   *  The factory Edge(), create an new edge object.\r\n   * \r\n   *  A edge represents a connection of two vertices.\r\n   *\r\n   *  Syntax:\r\n   *  var edge = Makrene.Edge();\r\n   *\r\n   *  @public\r\n   *  @param {object} data - The data of the edge\r\n   *  @return {Makrene.Edge} - New edge object\r\n   */\r\n  Edge: function Makrene_Edge(data){\r\n\r\n    var edge = Object.create(Makrene_Edge.prototype, {});\r\n\r\n    return Object.assign(edge, {\r\n      vertices   : [],\r\n      faces      : [],\r\n      neighbors  : [],\r\n      data       : data || {}\r\n    });\r\n  },\r\n\r\n  /**\r\n   *  The isEdge() method determines whether the passed value is an Edge object.\r\n   *\r\n   *  Syntax:\r\n   *  Makrene.isEdge(value);\r\n   *  \r\n   *  @param {object} value - The value to be checked.\r\n   *  @return {bool} - true if the value is an Edge; otherwise, false.\r\n   */\r\n  isEdge: function (value){\r\n    if (typeof value === 'undefined') { return false; }\r\n    return value instanceof Makrene.Edge;\r\n  },\r\n\r\n  /**\r\n   *  The factory Face(), create an new Face object.\r\n   * \r\n   *  A face represents a area between closed connected edges. Also known as polygon.\r\n   *\r\n   *  Syntax:\r\n   *  var face = Makrene.Face();\r\n   *\r\n   *  @public\r\n   *  @param {object} data - The data of the face\r\n   *  @return {Makrene.Face} - New face object\r\n   */\r\n  Face: function Makrene_Face(data){\r\n\r\n    var face = Object.create(Makrene_Face.prototype, {});\r\n\r\n    return Object.assign(face, {\r\n      vertices   : [],\r\n      edges      : [],\r\n      neighbors  : [],\r\n      data       : data || {}\r\n    });\r\n  },\r\n\r\n  /**\r\n   *  The isFace() method determines whether the passed value is an Face object.\r\n   *\r\n   *  Syntax:\r\n   *  Makrene.isFace(value);\r\n   *  \r\n   *  @param {object} value - The value to be checked.\r\n   *  @return {bool} - true if the value is an Face; otherwise, false.\r\n   */\r\n  isFace: function (value){\r\n    if (typeof value === 'undefined') { return false; }\r\n    return value instanceof Makrene.Face;\r\n  },\r\n\r\n  /**\r\n   *  The factory Graph(), create an new Graph object.\r\n   * \r\n   *  A graph is a set of connected vertices, edges and faces.\r\n   *\r\n   *  Syntax:\r\n   *  var face = Makrene.Graph();\r\n   *\r\n   *  @public\r\n   *  @param {object} data - The data of the graph\r\n   *  @return {Makrene.Graph} - New graph object\r\n   */\r\n  Graph: function Makrene_Graph(data){\r\n\r\n    // new graph instance\r\n    var graph = Object.create(Makrene_Graph.prototype, {});\r\n\r\n    return Object.assign(graph, {\r\n\r\n      /**\r\n       *  List of callback function for the onChange() Method.\r\n       *\r\n       *  @private\r\n       *  @type {array<function>}\r\n       */\r\n      _onChangeCallbacks: [],\r\n \r\n      /**\r\n       *  If true no event should be fired.\r\n       * \r\n       *  @private\r\n       *  @type {bool}\r\n       */\r\n      _suppressEventFires: false,\r\n\r\n      /**\r\n       *  List of vertices.\r\n       *\r\n       *  @public\r\n       *  @type {array<Makrene.Vertex>}\r\n       */\r\n      vertices   : [],\r\n \r\n      /**\r\n       *  List of edges.\r\n       *\r\n       *  @public\r\n       *  @type {array<Makrene.Edge>}\r\n       */\r\n      edges      : [],\r\n \r\n      /**\r\n       *  List of faces.\r\n       *\r\n       *  @public\r\n       *  @type {array<Makrene.Face>}\r\n       */\r\n      faces      : [],\r\n \r\n      /**\r\n       *  List of neighbors.\r\n       *\r\n       *  @public\r\n       *  @type {array<Makrene.Graph>}\r\n       */\r\n      neighbors   : [],\r\n \r\n      /**\r\n       *  Data object.\r\n       *\r\n       *  @public\r\n       *  @type {object}\r\n       */\r\n      data       : data || {},\r\n\r\n      /**\r\n       *  Add vertex to graph.\r\n       *\r\n       *  @public\r\n       *  @fires Change-Event\r\n       *  @param {Makrene.Vertex} vertex - object to add\r\n       *  @return {Makrene.Graph}        - this graph instance\r\n       */\r\n      addVertex : function(vertex) { \r\n        graph.vertices.push(vertex); \r\n\r\n        graph.emitChange({\r\n          action: \"addVertex\",\r\n          graph: graph,\r\n          newObject: vertex\r\n        }); \r\n        \r\n        return graph; \r\n      },\r\n\r\n      /**\r\n       *  Add edge to graph.\r\n       *\r\n       *  @public\r\n       *  @fires Change-Event\r\n       *  @param {Makrene.Edge} edge - object to add\r\n       *  @return {Makrene.Graph}    - this graph instance\r\n       */\r\n      addEdge   : function(edge) { \r\n        graph.edges.push(edge);    \r\n      \r\n        graph.emitChange({\r\n          action: \"addEdge\",\r\n          graph: graph,\r\n          newObject: edge\r\n        }); \r\n\r\n        return graph; \r\n      },\r\n\r\n      /**\r\n       *  Add face to graph.\r\n       *\r\n       *  @public\r\n       *  @fires Change-Event\r\n       *  @param {Makrene.Face} face - object to add\r\n       *  @return {Makrene.Graph}    - this graph instance\r\n       */\r\n      addFace   : function(face)   { \r\n        graph.faces.push(face);    \r\n\r\n        graph.emitChange({\r\n          action: \"addFace\",\r\n          graph: graph,\r\n          newObject: face\r\n        }); \r\n\r\n        return graph;\r\n      },\r\n\r\n      /**\r\n       *  The forEach() method executes a provided function once for each vertex of the graph.\r\n       *\r\n       *  @public\r\n       *  @param {function} fn - callback function for each vertex\r\n       *  @return {undefined}\r\n       */\r\n      forEach   : function(fn)     { graph.vertices.forEach(fn); },\r\n\r\n      /**\r\n       *  The onchange event occurs when the value of an graph component has been changed.\r\n       *\r\n       *  @public\r\n       *  @param {function} fn - callback when an change is been emitted. \r\n       *  @return {undefined}\r\n       */\r\n      onChange  : function(fn)     { graph._onChangeCallbacks.push(fn); },\r\n\r\n      /**\r\n       *  Triggers a change event, which will call all listeners.\r\n       *\r\n       *  @public\r\n       *  @param {object} event - the event data which will be sent\r\n       *  @return {undefined}\r\n       */\r\n      emitChange: function(event)  { \r\n        if (!graph._suppressEventFires) {\r\n          graph._onChangeCallbacks.forEach(function(fn){ fn(event) });\r\n        } \r\n      }\r\n    });\r\n  },\r\n\r\n  /**\r\n   *  The isGraph() method determines whether the passed value is an Graph object.\r\n   *\r\n   *  Syntax:\r\n   *  Makrene.isGraph(value);\r\n   *  \r\n   *  @param {object} value - The value to be checked.\r\n   *  @return {bool} - true if the value is an Graph; otherwise, false.\r\n   */\r\n  isGraph: function (value){\r\n    if (typeof value === 'undefined') { return false; }\r\n    return value instanceof Makrene.Graph;\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = Makrene;\r\n\n},{}],2:[function(_dereq_,module,exports){\n/*global require, module */\r\n\r\n_dereq_('../vendorJs/polyfill')\r\n\r\n/**\r\n *  Combines all Makrene components into on usable namespace object.\r\n */\r\nmodule.exports = Object.assign(_dereq_('./base/makrene.base'), {\r\n  Circle : _dereq_('./graph/makrene.graph.circle'),\r\n  Grid   : _dereq_('./graph/makrene.graph.grid'),\r\n  Ki     : { Circle : _dereq_('./ki/makrene.ki.circle') },\r\n  Search : _dereq_('./search/makrene.search'),\r\n  Visualizer : Object.assign(_dereq_('./visualizer/makrene.visualizer'), {\r\n    Grid   : _dereq_('./visualizer/makrene.visualizer.grid'),\r\n\r\n    /**\r\n     *  @typedef Circle\r\n     */\r\n    Circle : _dereq_('./visualizer/makrene.visualizer.circle'),\r\n    CircleFullscreen : _dereq_('./visualizer/makrene.visualizer.circleFullscreen')\r\n  })\r\n});\r\n\n},{\"../vendorJs/polyfill\":11,\"./base/makrene.base\":1,\"./graph/makrene.graph.circle\":3,\"./graph/makrene.graph.grid\":4,\"./ki/makrene.ki.circle\":5,\"./search/makrene.search\":6,\"./visualizer/makrene.visualizer\":10,\"./visualizer/makrene.visualizer.circle\":7,\"./visualizer/makrene.visualizer.circleFullscreen\":8,\"./visualizer/makrene.visualizer.grid\":9}],3:[function(_dereq_,module,exports){\n(function() {\r\n\r\n/*global require, module */\r\n\r\nvar Makrene = _dereq_('../base/makrene.base')\r\n\r\n/**\r\n *  Multi linked circle mesh.\r\n *\r\n *     -----B-----\r\n *    /    / \\    \\\r\n *   A----5---6----C\r\n *   | \\ / \\ / \\ / |\r\n *   |  4---1---7  |\r\n *   | / \\ / \\ / \\ |  Circle with numVertexOnLevel = 6\r\n *   9----3---2----D         and  length = 13\r\n *    \\    \\ /    /\r\n *     -----8-----\r\n *\r\n *  The circle contains multiple levels/rings, each with a \r\n *  max number of vertices. The center contains one vertex, connected\r\n *  with each of the first level/ring. Each level vertex is connected\r\n *  with their visual neighbor and two vertices of the lower and \r\n *  higher level/ring (because each level/ring is offset by half \r\n *  the distance of each vertex, which puts every vertex in the \r\n *  middle of the vertices below and above). \r\n *\r\n *  Behaves like a sequence. The first element is the center of \r\n *  the circle and it grows outside, by which the last element \r\n *  is the vertex with the highest degree/angle on the outer \r\n *  level/ring.\r\n *  \r\n *  Syntax:\r\n *  \r\n *  let circle = Makrene.Circle();\r\n *\r\n *  @public\r\n *  @implements {Graph}\r\n *  @param {object} config - the Settings\r\n *  @param {number} config.numVertexOnLevel - @see graph.numVertexOnLevel\r\n *  @returns {Circle} Circle\r\n */\r\nmodule.exports = function Makrene_Circle(config) {\r\n\r\n  /***\r\n   *       _____             __ _       \r\n   *      / ____|           / _(_)      \r\n   *     | |     ___  _ __ | |_ _  __ _ \r\n   *     | |    / _ \\| '_ \\|  _| |/ _` |\r\n   *     | |___| (_) | | | | | | | (_| |\r\n   *      \\_____\\___/|_| |_|_| |_|\\__, |\r\n   *                               __/ |\r\n   *                              |___/ \r\n   */\r\n\r\n  config = Object.assign({\r\n\r\n   /**\r\n    *  default setting for numVertexOnLevel\r\n    *  @see graph.numVertexOnLevel\r\n    */\r\n    numVertexOnLevel: 8\r\n\r\n  }, config);\r\n\r\n  /***\r\n   *      ______ _      _     _     \r\n   *     |  ____(_)    | |   | |    \r\n   *     | |__   _  ___| | __| |___ \r\n   *     |  __| | |/ _ \\ |/ _` / __|\r\n   *     | |    | |  __/ | (_| \\__ \\\r\n   *     |_|    |_|\\___|_|\\__,_|___/\r\n   *                                \r\n   *                                \r\n   */\r\n\r\n  /**\r\n   *  @private\r\n   *  @see graph.numCircleLevels\r\n   */\r\n  var _numCircleLevels = 0;\r\n   \r\n  /**\r\n   *  @private\r\n   *  @see graph.length\r\n   */\r\n  var _circleLength = 0;\r\n\r\n  /***\r\n   *      _____                           _   _           \r\n   *     |  __ \\                         | | (_)          \r\n   *     | |__) | __ ___  _ __   ___ _ __| |_ _  ___  ___ \r\n   *     |  ___/ '__/ _ \\| '_ \\ / _ \\ '__| __| |/ _ \\/ __|\r\n   *     | |   | | | (_) | |_) |  __/ |  | |_| |  __/\\__ \\\r\n   *     |_|   |_|  \\___/| .__/ \\___|_|   \\__|_|\\___||___/\r\n   *                     | |                              \r\n   *                     |_|                              \r\n   */\r\n\r\n  /**\r\n   *  Circle Instance.\r\n   * \r\n   *  @typedef Circle\r\n   *  @type {Object}\r\n   */\r\n  var graph = Object.create(Makrene_Circle.prototype, {\r\n\r\n    /**\r\n     *  Gets the number of max vertex count per level/ring.\r\n     *\r\n     *  @public\r\n     *  @default 8\r\n     *  @type {number}\r\n     */\r\n    numVertexOnLevel: {\r\n      value: config.numVertexOnLevel\r\n    },\r\n\r\n    /**\r\n     *  Gets the number of circle levels/rings.\r\n     *\r\n     *  @public\r\n     *  @type {number}\r\n     */\r\n    numCircleLevels: {\r\n      get: function(){\r\n        return _numCircleLevels;\r\n      }\r\n    },\r\n\r\n    /**\r\n     *  The number of vertices in the circle/graph.\r\n     *\r\n     *  @public\r\n     *  @type {number}\r\n     */\r\n    length  : {\r\n      get: function(){\r\n        return _circleLength;\r\n      }\r\n    },\r\n\r\n    /**\r\n     *  Is circle empty.\r\n     *\r\n     *  @public\r\n     *  @type {boolean}\r\n     */\r\n    isEmpty : {\r\n      get: function(){\r\n        return graph.vertices.length === 0;\r\n      }\r\n    },\r\n\r\n    /**\r\n     *  First Element of circle/graph, which is the center of the circle.\r\n     *\r\n     *  @public\r\n     *  @type {Makrene.Vertex}\r\n     */\r\n    first: {\r\n      get: function(){\r\n        return graph.vertices[0] ? graph.vertices[0][0] : undefined;\r\n      }\r\n    },\r\n\r\n    /**\r\n     *  Visual center element of circle/graph. Same as first().\r\n     *\r\n     *  @public\r\n     *  @alias graph.first\r\n     *  @type {Makrene.Vertex}\r\n     */\r\n    center: {\r\n      get: function(){\r\n        return graph.first;\r\n      }\r\n    },\r\n\r\n    /**\r\n     *  Last element of circle/graph, which is the vertex with the \r\n     *  highest degree/angle on the outer level/ring.\r\n     *\r\n     *  @public\r\n     *  @type {Makrene.Vertex}\r\n     */\r\n    last: {\r\n      get: function(){\r\n        return graph.isEmpty \r\n          ? undefined \r\n          : graph.length === 1 \r\n            ? graph.center \r\n            : graph.vertices[_numCircleLevels][graph.vertices[_numCircleLevels].length - 1];\r\n      }\r\n    }\r\n  });\r\n\r\n  /***\r\n   *      __  __      _   _               _     \r\n   *     |  \\/  |    | | | |             | |    \r\n   *     | \\  / | ___| |_| |__   ___   __| |___ \r\n   *     | |\\/| |/ _ \\ __| '_ \\ / _ \\ / _` / __|\r\n   *     | |  | |  __/ |_| | | | (_) | (_| \\__ \\\r\n   *     |_|  |_|\\___|\\__|_| |_|\\___/ \\__,_|___/\r\n   *                                                                                     \r\n   */\r\n  return Object.assign(graph, Makrene.Graph(), {\r\n\r\n    /**\r\n     *  The push() method adds one or more elements to the end of \r\n     *  an Circle and returns the new length of the Circle.\r\n     *\r\n     *  Syntax:\r\n     *  let newCircleLength = circle.push(vertex1[, ...[, vertexN]])\r\n     *\r\n     *  @public\r\n     *  @fires Change-Event\r\n     *  @param {...Makrene.Vertex|object} v - The elements to add to the end of the Circle.\r\n     *                                        New vertex or data for new vertex.\r\n     *  @return {number} - Length after push of vertex\r\n     */\r\n    push: function () {\r\n\r\n      [].forEach.call(arguments, function (v) {\r\n\r\n        graph._suppressEventFires = true;\r\n\r\n        if (typeof v === 'undefined' || !(v instanceof Makrene.Vertex)) {\r\n          v = Makrene.Vertex(v || {});\r\n        }\r\n\r\n        if (!graph.isEmpty \r\n         && (_numCircleLevels == 0 || graph.vertices[_numCircleLevels].length === graph.numVertexOnLevel)) {\r\n\r\n          _numCircleLevels++;\r\n        }\r\n\r\n        graph.vertices[_numCircleLevels] = graph.vertices[_numCircleLevels] || [];\r\n\r\n        graph.addVertexAt(_numCircleLevels, graph.vertices[_numCircleLevels].length, v);  \r\n\r\n        graph._suppressEventFires = false;\r\n\r\n        graph.emitChange({\r\n          action: \"push\",\r\n          graph: graph,\r\n          newObject: v\r\n        }); \r\n\r\n      });\r\n\r\n      return graph.length;\r\n    },\r\n  \r\n    /**\r\n     *  The pop() method removes the last element from an Circle and returns that element. \r\n     *  This method changes the length of the Circle.\r\n     *\r\n     *  Syntax:\r\n     *  var vertex = circle.pop()\r\n     *\r\n     *  @public\r\n     *  @fires Change-Event\r\n     *  @return {Makrene.Vertex|undefined} - The removed element from the circle; \r\n     *                                       undefined if the circle is empty.\r\n     */\r\n    pop: function(){\r\n\r\n      graph._suppressEventFires = true;\r\n\r\n      var object = graph.removeVertex(graph.last);\r\n\r\n      graph._suppressEventFires = false;\r\n\r\n      graph.emitChange({\r\n        action: \"pop\",\r\n        graph: graph,\r\n        removedObject: object\r\n      }); \r\n\r\n      return object;\r\n    },\r\n\r\n    /**\r\n     *  The shift() method removes the first element from an Circle and returns that removed element. \r\n     *  This method changes the length of the Circle.\r\n     *\r\n     *  Syntax:\r\n     *  var vertex = circle.shift()\r\n     *\r\n     *  @public\r\n     *  @fires Change-Event\r\n     *  @return {Makrene.Vertex|undefined} - The removed element from the circle; \r\n     *                                       undefined if the circle is empty.\r\n     *\r\n     *  @remarks Algorithm-idea: fast rotate to center\r\n     *           - remove middle\r\n     *           - remove every first element of each level, shift rest one position to front\r\n     *           - add removed element one level lower on freed last position\r\n     */\r\n    shift: function(){\r\n\r\n      graph._suppressEventFires = true;\r\n\r\n      var removedVertex;\r\n\r\n      if (graph.isEmpty) { return; }\r\n      else if (graph.length === 1) {\r\n\r\n        removedVertex = graph.last;\r\n        graph.removeVertex(graph.last);\r\n\r\n      } else {\r\n\r\n        // remove all level index 0\r\n        var indexZeroVertices = [];\r\n        for (var i = graph.vertices.length - 1; i >= 0; i--) {\r\n          indexZeroVertices[i] = graph.vertices[i][0];\r\n          graph.removeVertex(graph.vertices[i][0]);\r\n        }\r\n\r\n        // shift all levels --> undefined at last max level index\r\n        for (var j = graph.vertices.length - 1; j >= 0; j--) {\r\n          graph.vertices[j].shift();\r\n\r\n          graph.vertices[j].forEach(function(v, index){\r\n            if (v){\r\n              v.data.degree = calculateVertexDegree(graph, j, index);\r\n              v.data.level  = j;\r\n              v.id = v.data.level + '_' + v.data.degree;\r\n            }\r\n          });\r\n        }\r\n        _circleLength--;\r\n\r\n        // add all index 0 at the end of level below\r\n        graph.addVertexAt(0, 0, indexZeroVertices[1]);\r\n        for (var k = indexZeroVertices.length - 1; k >= 2; k--) {\r\n          graph.addVertexAt(k - 1, graph.numVertexOnLevel - 1, indexZeroVertices[k]);\r\n        }\r\n\r\n        removedVertex = indexZeroVertices[0];\r\n      }\r\n      \r\n      graph._suppressEventFires = false;\r\n\r\n      graph.emitChange({\r\n        action: \"shift\",\r\n        graph: graph,\r\n        removedObject:removedVertex\r\n      }); \r\n\r\n      return removedVertex;\r\n    },\r\n    \r\n    /**\r\n     *  The unshift() method adds one or more elements to the beginning of \r\n     *  an Circle and returns the new length of the Circle.\r\n     *\r\n     *  Syntax:\r\n     *  let newCircleLength = circle.unshift(vertex1[, ...[, vertexN]])\r\n     *\r\n     *  @public\r\n     *  @fires Change-Event\r\n     *  @param {...Makrene.Vertex|object} v - The elements to add to the beginning of the Circle.\r\n     *                                        New vertex or data for new vertex.\r\n     *  @return {number} - The new length property of the circle upon which the method was called.\r\n     */\r\n    unshift: function(){\r\n\r\n      [].forEach.call(arguments, function (v) {\r\n\r\n        graph._suppressEventFires = true;\r\n\r\n        if (typeof v === 'undefined' || !(v instanceof Makrene.Vertex)) {\r\n          v = Makrene.Vertex(v || {});\r\n        }\r\n\r\n        if (graph.isEmpty) { \r\n          graph.addVertexAt(0, 0, v);  \r\n          _circleLength = 1;\r\n        } else {\r\n          var shouldIncreaseLevelAfter = _numCircleLevels == 0 || graph.vertices[_numCircleLevels].length === graph.numVertexOnLevel;\r\n          var oldLength = graph.length;\r\n          // remove every last index\r\n          var indexLastVertices = [graph.center];\r\n          graph.removeVertex(graph.center);\r\n          for (var i = graph.vertices.length - 1; i >= 0; i--) {\r\n            if (graph.vertices[i][graph.numVertexOnLevel-1]){\r\n              indexLastVertices[i] = graph.vertices[i][graph.numVertexOnLevel-1];\r\n              graph.removeVertex(graph.vertices[i][graph.numVertexOnLevel-1]);\r\n            }\r\n          }\r\n\r\n          // unshift every level -> insert undefined at 0\r\n          for (var j = graph.vertices.length - 1; j >= 0; j--) {\r\n            graph.vertices[j].unshift(undefined);\r\n\r\n            graph.vertices[j].forEach(function(v, index){\r\n              if (v){\r\n                v.data.degree = calculateVertexDegree(graph, j, index);\r\n                v.data.level  = j;\r\n                v.id = v.data.level + '_' + v.data.degree;\r\n              }\r\n            });\r\n          }\r\n          _circleLength = oldLength + 1;\r\n\r\n          // add all last index at beginning of level above\r\n          for (var k = indexLastVertices.length - 1; k >= 0; k--) {\r\n            graph.addVertexAt(k + 1, 0, indexLastVertices[k]);\r\n          }\r\n\r\n          // add vertex at 0,0\r\n          graph.addVertexAt(0, 0, v);\r\n\r\n          if (shouldIncreaseLevelAfter) {\r\n            _numCircleLevels++;\r\n          }\r\n        }\r\n\r\n        graph._suppressEventFires = false;\r\n\r\n        graph.emitChange({\r\n          action: \"unshift\",\r\n          graph: graph,\r\n          newObject: v\r\n        });\r\n\r\n      });\r\n\r\n      return graph.length;\r\n    },\r\n\r\n    /**\r\n     *  The fill() method fills all the elements of an circle from a start index to an end index with a static value. \r\n     *  The end index is not included.\r\n     *\r\n     *  Syntax:\r\n     *  circle.fill(value[, start[, end]])\r\n     *\r\n     *  @public\r\n     *  @fires Change-Event\r\n     *  @param {Makrene.Vertex|object} value - Value to fill an circle.\r\n     *  @param {number} start - Start index, defaults to 0.\r\n     *  @param {number} end - End index, defaults to this.length.\r\n     *  @return {Makrene.Circle} - The modified circle. \r\n     */\r\n    fill: function (value, start, end) {\r\n\r\n      graph._suppressEventFires = true;\r\n\r\n      if (typeof value === 'undefined' || !(value instanceof Makrene.Vertex)) {\r\n        value = Makrene.Vertex(value || {});\r\n      }\r\n\r\n      start = start || 0;\r\n      start = start < 0 ?\r\n        Math.max(graph.length + start, 0) :\r\n        Math.min(start, graph.length);\r\n\r\n      end = end || graph.length;\r\n\r\n      end = end < 0 ?\r\n        Math.max(graph.length + end, 0) :\r\n        Math.min(end, graph.length);\r\n\r\n      while (start < end) {\r\n        var pos = getPositionLevel(graph, start);\r\n        graph.addVertexAt(pos.level, pos.position, value);\r\n        start++;\r\n      }\r\n\r\n      graph._suppressEventFires = false;\r\n\r\n      graph.emitChange({\r\n        action: \"fill\",\r\n        graph: graph\r\n      });\r\n\r\n      return graph;\r\n    },\r\n\r\n    /**\r\n     *  The expandFromOutside() method pushes new empty vertices to the end\r\n     *  of the Circle.\r\n     * \r\n     *  Syntax:\r\n     *  circle.expandFromOutside(number)\r\n     * \r\n     *  @public\r\n     *  @fires Change-Event for each vertex\r\n     *  @param {number} number - How many vertices to push to the end.\r\n     *  @return {number} - The new length property of the circle upon which the method was called.\r\n     */\r\n    expandFromOutside: function(number){\r\n      number = number || graph.numVertexOnLevel;\r\n\r\n      for(;number>0;number--){ \r\n        graph.push(Makrene.Vertex());\r\n      }\r\n\r\n      return graph.length;\r\n    },\r\n\r\n    /**\r\n     *  The expandFromInside() method unshifts new empty vertices to the beginning\r\n     *  of the Circle.\r\n     * \r\n     *  Syntax:\r\n     *  circle.expandFromInside(number)\r\n     * \r\n     *  @public\r\n     *  @fires Change-Event for each vertex\r\n     *  @param {number} number - How many vertices to unshift to the beginning.\r\n     *  @return {number} - The new length property of the circle upon which the method was called.\r\n     */\r\n    expandFromInside: function(number){\r\n      number = number || graph.numVertexOnLevel;\r\n\r\n      for(;number>0;number--){ \r\n        graph.unshift(Makrene.Vertex());\r\n      }\r\n\r\n      return graph.length;\r\n    },\r\n\r\n    /**\r\n     *  The collapseFromOutside() method pops vertices from the end of the Circle.\r\n     * \r\n     *  Syntax:\r\n     *  circle.collapseFromOutside(number)\r\n     * \r\n     *  @public\r\n     *  @fires Change-Event for each vertex\r\n     *  @param {number} number - How many vertices to pop from the end.\r\n     *  @return {number} - The new length property of the circle upon which the method was called.\r\n     */\r\n    collapseFromOutside: function(number){\r\n      var deletedLevel = [];\r\n\r\n      number = number || graph.numVertexOnLevel;\r\n\r\n      for(;number>0;number--){ \r\n        deletedLevel.push(graph.pop());\r\n      }\r\n\r\n      return deletedLevel;\r\n    },\r\n\r\n    /**\r\n     *  The collapseFromInside() method shift vertices from the beginning of the Circle.\r\n     * \r\n     *  Syntax:\r\n     *  circle.collapseFromInside(number)\r\n     * \r\n     *  @public\r\n     *  @fires Change-Event for each vertex\r\n     *  @param {number} number - How many vertices to shift from the beginning.\r\n     *  @return {number} - The new length property of the circle upon which the method was called.\r\n     */\r\n    collapseFromInside: function(number){\r\n      var deletedLevel = [];\r\n\r\n      number = number || graph.numVertexOnLevel;\r\n\r\n      for(;number>0;number--){ \r\n        deletedLevel.push(graph.shift());\r\n      }\r\n\r\n      return deletedLevel;\r\n    },\r\n\r\n    /**\r\n     *  Clears all vertices form the circle. And resets all data.\r\n     * \r\n     *  Syntax:\r\n     *  circle.clear()\r\n     * \r\n     *  @public\r\n     *  @fires Change-Event\r\n     *  @return {undefined} \r\n     */\r\n    clear: function(){\r\n\r\n      _numCircleLevels  = 0;\r\n      _circleLength     = 0;\r\n      graph.faces       = [];\r\n      graph.edges       = [];\r\n      graph.vertices    = [];\r\n      graph.neighbors   = [];\r\n      graph.data        = {};\r\n\r\n      graph.emitChange({\r\n        action: \"clear\",\r\n        graph: graph\r\n      });\r\n    },\r\n\r\n    /**\r\n     *  The includes() method determines whether an circle includes a certain\r\n     *  element, returning true or false as appropriate.\r\n     * \r\n     *  Syntax:\r\n     *  circle.includes(searchElement)\r\n     * \r\n     *  @public\r\n     *  @param {Makrene.Vertex} searchElement - The element to search for.\r\n     *  @return {boolean} - A Boolean which is true if the value searchElement \r\n     *                      is found within the circle.\r\n     */\r\n    includes: function(searchElement){\r\n      return graph.filter(function(v){ return v === searchElement; }).length > 0;\r\n    },\r\n\r\n    /**\r\n     *  Gets vertex at a certain level and position on that level of a circle.\r\n     *  \r\n     *  Syntax:\r\n     *  circle.vertexAt(level, position)\r\n     * \r\n     *  @public\r\n     *  @param {number} level - The level of the circle.\r\n     *  @param {number} position - The position on the level.\r\n     *  @return {Vertex|undefined} - The vertex on the position.\r\n     */\r\n    vertexAt: function(level, position){\r\n      return graph.vertices[level] ? graph.vertices[level][position] : undefined;\r\n    },\r\n\r\n    /**\r\n     *  Returns the vertex at a specified index in a circle.\r\n     * \r\n     *  @public\r\n     *  @param {number} index - The zero-based index of the vertex to retrieve.\r\n     *  @param {Vertex|undefined} - The element at the specified position in the circle.\r\n     *  @return {Vertex|undefined} - The vertex on the position.\r\n     */\r\n    vertexAtIndex: function(index){\r\n      var positionLevel = getPositionLevel(graph, index)\r\n      return graph.vertexAt(positionLevel.level, positionLevel.position);\r\n    },\r\n\r\n    /**\r\n     *  Get all Faces of a circle level.\r\n     * \r\n     *  Syntax:\r\n     *  circle.faceAt(level)\r\n     * \r\n     *  @public\r\n     *  @param {number} level - The zero-based level of the circle.\r\n     *  @return {array<Face>} - A list of all Faces for one level.\r\n     */\r\n    facesAt: function(level){\r\n      return graph.faces.filter(function(f){ return f.data.level == level; });\r\n    },\r\n\r\n    /**\r\n     *  Get all Faces grouped by level.\r\n     *  \r\n     *  Syntax:\r\n     *  circle.getFacesLevelArray()\r\n     * \r\n     *  @public\r\n     *  @return {array<array<Face>>} - Grouped list of all Faces.\r\n     */\r\n    getFacesLevelArray: function(){\r\n      var r = [];\r\n\r\n      graph.faces.forEach(function(f){ \r\n        \r\n        if (typeof r[f.data.level] === 'undefined') {\r\n          r[f.data.level] = []; \r\n        }\r\n\r\n        r[f.data.level].push(f); \r\n      });\r\n\r\n      return r;\r\n    },\r\n\r\n    /**\r\n     *  The indexOf() method returns the first index at which a given \r\n     *  vertex can be found in the circle, or -1 if it is not present.\r\n     * \r\n     *  Syntax:\r\n     *  circle.indexOf(vertex)\r\n     *  \r\n     *  @public\r\n     *  @param {Vertex} vertex - Vertex to locate in the circle.\r\n     *  @return {number} - The first index of the vertex in the circle; -1 if not found.\r\n     */\r\n    indexOf: function(vertex){\r\n      var index = 0;\r\n      \r\n      for (var i = graph.vertices.length - 1, i2 = 0; i >= 0; i--, i2++) {\r\n        var levelIndex = graph.vertices[i2].indexOf(vertex);\r\n        if (levelIndex >= 0){\r\n          return index + levelIndex;\r\n        } else {\r\n          index += graph.vertices[i2].length;\r\n        }\r\n      }\r\n\r\n      return -1;\r\n    },\r\n    \r\n    addVertexAt: function(level, pos, v){\r\n\r\n      if (graph.numVertexOnLevel == 0){ return; }\r\n      if (graph.numVertexOnLevel < pos){ return; }\r\n      if (graph.level == 0 && pos !== 0) { return; }\r\n\r\n      graph.vertices[level] = graph.vertices[level] || [];\r\n\r\n      if (typeof v === 'undefined') {\r\n        graph.vertices[level][pos] = undefined;\r\n      } else {\r\n\r\n        v.data.degree = calculateVertexDegree(graph, level, pos);\r\n        v.data.level  = level;\r\n        v.id = v.data.level + '_' + v.data.degree;\r\n        graph.vertices[level][pos] = v;\r\n\r\n        //Link center with everyone above\r\n        if (level === 0) {\r\n          if (graph.vertices[1]) {\r\n            linkCenterWithLevelAboveVertexes(graph);\r\n          }\r\n        } else {\r\n          \r\n          //linking with level below\r\n          linkWithLevelBelowVertexes(graph, level, pos);\r\n\r\n          //linking with level above\r\n          linkWithLevelAboveVertexes(graph, level, pos);\r\n\r\n          //link with previous neighbor\r\n          linkWithNeighborVertex(\r\n            graph, \r\n            v, \r\n            graph.vertices[level][(pos - 1 + graph.numVertexOnLevel) % graph.numVertexOnLevel]);\r\n\r\n          //link with next neighbor \r\n          linkWithNeighborVertex(\r\n            graph, \r\n            v, \r\n            graph.vertices[level][(pos + 1 + graph.numVertexOnLevel) % graph.numVertexOnLevel]); \r\n        }  \r\n      }\r\n      \r\n      var index = getIndex(graph, pos, level);\r\n      if (index > graph.length - 1) {\r\n        _circleLength = index + 1;  \r\n      }\r\n    },\r\n\r\n    removeVertexFrom: function(level, pos){\r\n      return graph.removeVertex(graph.vertexAt(level, pos));\r\n    },\r\n\r\n    removeVertex: function(vertex) {\r\n      if (vertex){\r\n\r\n        // remove neighbors\r\n        vertex.neighbors.forEach(function(neighbor){\r\n          neighbor.neighbors.splice(neighbor.neighbors.indexOf(vertex), 1);\r\n        });\r\n        \r\n        // remove edges\r\n        vertex.edges.forEach(function(edge){\r\n          edge.neighbors.forEach(function(neighbor){\r\n            neighbor.neighbors.splice(neighbor.neighbors.indexOf(edge), 1);\r\n          });\r\n\r\n          edge.vertices.forEach(function(v){\r\n            if (v != vertex) {\r\n              v.edges.splice(v.edges.indexOf(edge), 1);\r\n            }\r\n          });\r\n\r\n          edge.faces.forEach(function(face){\r\n            face.edges.splice(face.edges.indexOf(edge), 1);\r\n          });\r\n\r\n          \r\n          graph.edges.splice(graph.edges.indexOf(edge), 1);\r\n        });\r\n\r\n        // remove faces\r\n        vertex.faces.forEach(function(face){\r\n          face.neighbors.forEach(function(neighbor){\r\n            neighbor.neighbors.splice(neighbor.neighbors.indexOf(face), 1);\r\n          });\r\n\r\n          face.vertices.forEach(function(v){\r\n            if (v != vertex) {\r\n              v.faces.splice(v.faces.indexOf(face), 1);\r\n            }\r\n          });\r\n\r\n          face.edges.forEach(function(edge){\r\n            edge.faces.splice(edge.faces.indexOf(face), 1);\r\n          });\r\n\r\n          graph.faces.splice(graph.faces.indexOf(face), 1);\r\n        });\r\n\r\n        var vertexIndex = 0;\r\n        // remove vertex\r\n        graph.vertices.forEach(function(level, index){\r\n          if (level.includes(vertex)){\r\n            vertexIndex = getIndex(graph, level.indexOf(vertex), index);\r\n            if (level.indexOf(vertex) == level.length - 1){\r\n              level.length = level.length - 1;\r\n            } else {\r\n              delete level[level.indexOf(vertex)];\r\n            }\r\n            \r\n            if (_numCircleLevels == index && level.length === 0) {\r\n              if (graph.numCircleLevels === 0) {\r\n                graph.vertices = [];\r\n              } else {\r\n                _numCircleLevels--;\r\n                graph.vertices.splice(graph.vertices.indexOf(level), 1);\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n        vertex.edges = [];\r\n        vertex.faces = [];\r\n        vertex.neighbors = [];\r\n\r\n        if (vertexIndex == _circleLength - 1) {\r\n          _circleLength--;\r\n        }\r\n        \r\n        return vertex;\r\n      }\r\n    },\r\n\r\n    /**\r\n     *  The forEach() method executes a provided function once for each array element.\r\n     *\r\n     *  Syntax:\r\n     *  circle.forEach(function callback(currentVertex[, index[, graph]]) {\r\n     *    //your iterator\r\n     *  }[, thisArg]);\r\n     *\r\n     *  @public\r\n     *  @param {function} callback - Function is a predicate, to test each element of the circle. \r\n     *                               Return true to keep the element, false otherwise. It accepts three arguments:\r\n     *                          currentVertex  Optional\r\n     *                              The current element being processed in the circle.\r\n     *                          index   Optional\r\n     *                              The index of the current element being processed in the circle.\r\n     *                          circle   Optional\r\n     *                              The circle filter was called upon.\r\n     *\r\n     *  @return {array} - A new array with the elements that pass the test. If no elements pass the test, an empty array will be returned.\r\n     */\r\n    forEach: function(callback){\r\n      graph.vertices.forEach(function(levels, level){ \r\n        levels.forEach(function(item, position){\r\n          callback(item, getIndex(graph, position, level), graph);\r\n        }); \r\n      });\r\n    },\r\n\r\n    /**\r\n     *  The filter() method creates a new array with all elements \r\n     *  that pass the test implemented by the provided function.\r\n     *\r\n     *  Syntax:\r\n     *  var newArray = circle.filter(callback(vertex[, index[, graph]])[, thisArg])\r\n     *\r\n     *  @public\r\n     *  @param {function} callback - Function is a predicate, to test each element of the circle. \r\n     *                               Return true to keep the element, false otherwise. It accepts three arguments:\r\n     *                          vertex  Optional\r\n     *                              The current element being processed in the circle.\r\n     *                          index   Optional\r\n     *                              The index of the current element being processed in the circle.\r\n     *                          graph   Optional\r\n     *                              The circle filter was called upon.\r\n     *\r\n     *  @return {array} - A new array with the elements that pass the test. If no elements pass the test, an empty array will be returned.\r\n     */\r\n    filter: function(callback){\r\n      var res = [];\r\n\r\n      graph.forEach(function(vertex, index){\r\n        if (callback(vertex, index, graph)){\r\n          res.push(vertex);\r\n        }\r\n      });\r\n\r\n      return res;\r\n    },\r\n\r\n    /**\r\n     *  The map() method creates a new array with the results of calling a provided function on \r\n     *  every element in the calling circle.\r\n     *\r\n     *  Syntax:\r\n     *  var new_array = arr.map(function callback(currentVertex[, index[, graph]]) {\r\n     *    // Return element for new_array\r\n     *  }[, thisArg])\r\n     *\r\n     *  @public\r\n     *  @param {function} callback - Function that produces an element of the new Array, taking three arguments:\r\n     *                          currentVertex  Optional\r\n     *                              The value of the current element being processed in the circle.\r\n     *                          index   Optional\r\n     *                              The index of the current element being processed in the circle.\r\n     *                          graph   Optional\r\n     *                              The circle that forEach() is being applied to.\r\n     *\r\n     *  @return {array} - A new array with each element being the result of the callback function.\r\n     */\r\n    map: function(callback){\r\n      var res = [];\r\n\r\n      graph.forEach(function(vertex, index){\r\n        res.push(callback(vertex, index, graph));\r\n      });\r\n\r\n      return res;\r\n    },\r\n\r\n    /**\r\n     *  The toString() method returns a string representing the circle.\r\n     *\r\n     *  Syntax:\r\n     *  circle.toString()\r\n     *\r\n     *  @public\r\n     *  @return {string} - A string representing the circle.\r\n     */\r\n    toString: function () {\r\n      return 'Makrene.Circle' +\r\n             '\\n\\tNumVertexOnLevel: ' + graph.numVertexOnLevel +\r\n             '\\n\\tNumCircleLevels: ' + graph.numCircleLevels +\r\n             '\\n\\tLength: ' + graph.length +\r\n             '\\n\\tEdges: ' + graph.edges.length +\r\n             '\\n\\tFaces: ' + graph.faces.length;\r\n    }\r\n  });\r\n};\r\n\r\n/***\r\n *      _____      _            _            \r\n *     |  __ \\    (_)          | |           \r\n *     | |__) | __ ___   ____ _| |_ ___  ___ \r\n *     |  ___/ '__| \\ \\ / / _` | __/ _ \\/ __|\r\n *     | |   | |  | |\\ V / (_| | ||  __/\\__ \\\r\n *     |_|   |_|  |_| \\_/ \\__,_|\\__\\___||___/\r\n *                                                                                    \r\n */\r\n\r\nfunction getIndex (graph, position, level) {\r\n  return (level === 0) ? 0 : (((level - 1) * graph.numVertexOnLevel) + position) + 1;\r\n}\r\n\r\nfunction getPositionLevel (graph, index) {\r\n\r\n  if (index == 0) {\r\n    return {\r\n      level: 0,\r\n      position: 0\r\n    };\r\n  } else {\r\n    return {\r\n      level: Math.floor(index / graph.numVertexOnLevel) + 1,\r\n      position: Math.floor(index % graph.numVertexOnLevel) - 1\r\n    };\r\n  }\r\n}\r\n\r\nfunction linkWithLevelBelowVertexes(graph, levelIndex, vertexLevelIndex){\r\n  var lastLevelVertexes = graph.vertices[levelIndex - 1];\r\n\r\n  if (lastLevelVertexes) {\r\n    var v = graph.vertices[levelIndex][vertexLevelIndex];\r\n    var index1 = (lastLevelVertexes.length - 1) < vertexLevelIndex     ? 0 : vertexLevelIndex;\r\n    var index2 = (lastLevelVertexes.length - 1) < vertexLevelIndex + 1 ? 0 : vertexLevelIndex + 1;\r\n\r\n    if (lastLevelVertexes[index1]) {\r\n      v.neighbors.push(lastLevelVertexes[index1]);\r\n      lastLevelVertexes[index1].neighbors.push(v);\r\n    \r\n      createEdge(graph, v, lastLevelVertexes[index1]); \r\n    }\r\n\r\n    if (index1 != index2 && lastLevelVertexes[index2]) {\r\n      v.neighbors.push(lastLevelVertexes[index2]);\r\n      lastLevelVertexes[index2].neighbors.push(v);\r\n      \r\n      createEdge(graph, v, lastLevelVertexes[index2]);\r\n      if (lastLevelVertexes[index1]){\r\n        createFace(graph, v, lastLevelVertexes[index1], lastLevelVertexes[index2]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction linkWithLevelAboveVertexes(graph, levelIndex, vertexLevelIndex){\r\n  var aboveLevelVertexes = graph.vertices[levelIndex + 1];\r\n\r\n  if (aboveLevelVertexes){\r\n    var v = graph.vertices[levelIndex][vertexLevelIndex];\r\n    var index1 = vertexLevelIndex\r\n    var index2 = vertexLevelIndex - 1 < 0 ? graph.numVertexOnLevel - 1 : vertexLevelIndex - 1;\r\n\r\n    if (aboveLevelVertexes[index1]){\r\n       v.neighbors.push(aboveLevelVertexes[index1]);\r\n       aboveLevelVertexes[index1].neighbors.push(v);\r\n    \r\n      createEdge(graph, v, aboveLevelVertexes[index1]); \r\n    }\r\n\r\n    if (index1 != index2 && aboveLevelVertexes[index2]){\r\n      v.neighbors.push(aboveLevelVertexes[index2]);\r\n      aboveLevelVertexes[index2].neighbors.push(v);\r\n      \r\n      createEdge(graph, v, aboveLevelVertexes[index2]);\r\n\r\n      if (aboveLevelVertexes[index1]){\r\n        createFace(graph, v, aboveLevelVertexes[index1], aboveLevelVertexes[index2]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction linkCenterWithLevelAboveVertexes(graph){\r\n\r\n  graph.vertices[1].forEach(function(aboveLevelVertex){\r\n    if (aboveLevelVertex){\r\n\r\n      graph.first.neighbors.push(aboveLevelVertex);\r\n      aboveLevelVertex.neighbors.push(graph.first);\r\n      createEdge(graph, graph.first, aboveLevelVertex);\r\n    }\r\n  });\r\n\r\n  graph.vertices[1].forEach(function(aboveLevelVertex, index){\r\n    if (aboveLevelVertex){\r\n      var indexNext = index - 1 < 0 ? graph.numVertexOnLevel - 1 : index - 1;\r\n\r\n      if (index != indexNext && graph.vertices[1][indexNext]){\r\n        createFace(graph, graph.first, aboveLevelVertex, graph.vertices[1][indexNext]);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction linkWithNeighborVertex(graph, vertex, neighbor){\r\n  if (neighbor) {\r\n    vertex.neighbors.push(neighbor);\r\n    neighbor.neighbors.push(vertex);\r\n    createEdge(graph, vertex, neighbor);\r\n\r\n    vertex.neighbors\r\n          .filter(function(n){ \r\n            if (neighbor != n){\r\n              return neighbor.neighbors.includes(n); \r\n            }\r\n          }).forEach(function(n){\r\n            createFace(graph, vertex, neighbor, n);\r\n          })\r\n  }\r\n}\r\n\r\nfunction createEdge(graph, v1, v2){\r\n  var edge = Makrene.Edge();\r\n  edge.vertices.push(v1);\r\n  edge.vertices.push(v2);\r\n  edge.id = graph.edges.length;\r\n  graph.edges.push(edge);\r\n\r\n  v2.edges.push(edge);\r\n  v1.edges.push(edge);\r\n\r\n  linkEdgeWithVertexEdges(edge, v1);\r\n  linkEdgeWithVertexEdges(edge, v2);\r\n}\r\n\r\nfunction linkEdgeWithVertexEdges (edge, vertex){\r\n  vertex.edges.forEach(function(e){\r\n    if (edge != e && !edge.neighbors.includes(e)){\r\n      edge.neighbors.push(e);\r\n      e.neighbors.push(edge);\r\n    }\r\n  });\r\n}\r\n\r\nfunction createFace(graph, v1, v2, v3){\r\n  var f = Makrene.Face();\r\n\r\n  f.vertices.push(v1);\r\n  f.vertices.push(v2);\r\n  f.vertices.push(v3);\r\n\r\n  v1.faces.push(f);\r\n  v2.faces.push(f);\r\n  v3.faces.push(f);\r\n\r\n  f.id = graph.faces.length;\r\n  f.data = {\r\n    level: Math.min(\r\n      v1.data.level,\r\n      v2.data.level,\r\n      v3.data.level)\r\n  };\r\n  \r\n  graph.faces.push(f);\r\n\r\n  linkFaceWithVertexFaces(f, v1);\r\n  linkFaceWithVertexFaces(f, v2);\r\n  linkFaceWithVertexFaces(f, v3);\r\n\r\n  // Link edge with face\r\n  var edges = [];\r\n  edges.push(v1.edges.filter(function(e){ return e.vertices.includes(v2); }).first());\r\n  edges.push(v2.edges.filter(function(e){ return e.vertices.includes(v3); }).first());\r\n  edges.push(v3.edges.filter(function(e){ return e.vertices.includes(v1); }).first());\r\n  \r\n  edges.forEach(function(e){\r\n    e.faces.push(f);\r\n    f.edges.push(e);\r\n  });\r\n}\r\n\r\nfunction linkFaceWithVertexFaces(face, vertex){\r\n  vertex.faces.forEach(function(f){\r\n    if (face != f && !face.neighbors.includes(f)){\r\n      face.neighbors.push(f);\r\n      f.neighbors.push(face);\r\n    }\r\n  });\r\n}\r\n\r\nfunction calculateVertexDegree(graph, level, levelPos) {\r\n  var levelDegreeOffset =  (360/graph.numVertexOnLevel)/2;\r\n  return levelDegreeOffset + (levelDegreeOffset * level) + ((360/graph.numVertexOnLevel) * levelPos);\r\n}\r\n\r\n}());\n},{\"../base/makrene.base\":1}],4:[function(_dereq_,module,exports){\n/*global require, module */\r\n\r\nvar Makrene = _dereq_('../base/makrene.base');\r\n\r\nvar Dir = {\r\n  Top     : 0,\r\n  Right   : 1,\r\n  Bottom  : 2,\r\n  Left    : 3,\r\n\r\n  TopLeft     : 0,\r\n  TopRight    : 1,\r\n  BottomRight : 2,\r\n  BottomLeft  : 3\r\n};\r\n\r\nmodule.exports = function(config){\r\n  config = config || {};\r\n\r\n  var graph = Object.assign(Makrene.Graph(), {\r\n\r\n    rows: config.rows || 0,\r\n    cols: config.cols || 0,\r\n\r\n    init: function(){\r\n      graph.createVertexes();\r\n      graph.linkVertexes();\r\n\r\n      graph.createEdges();\r\n      graph.linkEdges();\r\n\r\n      graph.createFaces();\r\n      graph.linkFaces();\r\n    },\r\n\r\n    createVertexes: function(){\r\n      for (var r = graph.rows - 1; r >= 0; r--) {\r\n        graph.vertices[r] = [];\r\n        for (var c = graph.cols - 1; c >= 0; c--) {\r\n          var v = Makrene.Vertex();\r\n\r\n          v.data.row = r;\r\n          v.data.col = c;\r\n\r\n          graph.vertices[r][c] = v;\r\n        }\r\n      }\r\n    },\r\n\r\n    linkVertexes: function(){\r\n      graph.forEach(function(vertex, row, col){\r\n\r\n        if (col > 0){\r\n          vertex.neighbors[Dir.Left] = graph.vertices[row][col - 1];\r\n        }\r\n\r\n        if (col < graph.cols -1) {\r\n          vertex.neighbors[Dir.Right] = graph.vertices[row][col + 1];\r\n        }\r\n\r\n        if (row > 0){\r\n          vertex.neighbors[Dir.Top] = graph.vertices[row - 1][col];\r\n        }\r\n\r\n        if (row < graph.rows -1){\r\n          vertex.neighbors[Dir.Bottom] = graph.vertices[row + 1][col];\r\n        }\r\n\r\n      });\r\n    },\r\n\r\n    createEdge: function(v1, v2){\r\n      var edge = Makrene.Edge();\r\n      edge.vertices.push(v1);\r\n      edge.vertices.push(v2);\r\n\r\n      graph.edges.push(edge);\r\n\r\n      v2.edges.push(edge);\r\n      v1.edges.push(edge);\r\n    },\r\n\r\n    createEdges: function(){\r\n      graph.forEach(function(vertex){\r\n        if (vertex.neighbors[Dir.Left]) {\r\n          graph.createEdge(vertex, vertex.neighbors[Dir.Left]);\r\n        }\r\n\r\n        if (vertex.neighbors[Dir.Top]) {\r\n          graph.createEdge(vertex, vertex.neighbors[Dir.Top]);\r\n        }\r\n      });\r\n    },\r\n\r\n    linkEdges: function(){\r\n      graph.edges.forEach(function(edge) {\r\n        edge.vertices.forEach(function(vertex) {\r\n          vertex.edges.forEach(function(neighbor){\r\n            if (edge != neighbor) {\r\n              edge.neighbors.push(neighbor);\r\n            }\r\n          });\r\n        });\r\n      });\r\n    },\r\n\r\n    createFace: function(v1, v2, v3, v4){\r\n      var edges = [];\r\n\r\n      v1.edges.forEach(function(edge){\r\n        if (edge.vertices.includes(v2) || edge.vertices.includes(v3)){\r\n          edges.push(edge);\r\n        }\r\n      });\r\n\r\n      v4.edges.forEach(function(edge){\r\n        if (edge.vertices.includes(v2) || edge.vertices.includes(v3)){\r\n          edges.push(edge);\r\n        }\r\n      });\r\n\r\n      var face = Makrene.Face();\r\n\r\n      face.vertices[Dir.TopRight]    = v3;\r\n      face.vertices[Dir.TopLeft]     = v4;\r\n      face.vertices[Dir.BottomLeft]  = v2;\r\n      face.vertices[Dir.BottomRight] = v1;\r\n\r\n      graph.faces.push(face);\r\n\r\n      v1.faces.push(face)\r\n      v2.faces.push(face)\r\n      v3.faces.push(face)\r\n      v4.faces.push(face)\r\n\r\n      edges.forEach(function(edge){\r\n        face.edges.push(edge);\r\n        edge.faces.push(face);\r\n      });\r\n    },\r\n\r\n    createFaces: function(){\r\n      graph.forEach(function(vertex){\r\n        if (vertex.neighbors[Dir.Left]\r\n         && vertex.neighbors[Dir.Top]) {\r\n\r\n          graph.createFace(\r\n            vertex,\r\n            vertex.neighbors[Dir.Left],\r\n            vertex.neighbors[Dir.Top],\r\n            vertex.neighbors[Dir.Top]\r\n                  .neighbors[Dir.Left]);\r\n        }\r\n      });\r\n    },\r\n\r\n    linkFaces: function(){\r\n      graph.faces.forEach(function(face) {\r\n        face.vertices.forEach(function(vertex) {\r\n          vertex.faces.forEach(function(neighbor){\r\n            if (face != neighbor) {\r\n              face.neighbors.push(neighbor);\r\n            }\r\n          });\r\n        });\r\n      });\r\n    },\r\n\r\n    forEach: function(fn){\r\n      for (var r = graph.rows - 1; r >= 0; r--) {\r\n        for (var c = graph.cols - 1; c >= 0; c--) {\r\n          fn(graph.vertices[r][c], r, c);\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  graph.init();\r\n\r\n  return graph;\r\n};\r\n\n},{\"../base/makrene.base\":1}],5:[function(_dereq_,module,exports){\n/*global module */\r\n\r\nmodule.exports = function(){\r\n\r\n  var ki = {\r\n    init: function(circle){\r\n      circle.forEach(function(v){\r\n        v.data.degree = v.data.degree % 360;\r\n        v.data.OriginalLevel = v.data.degree;\r\n        v.data.OriginalLevel= v.data.level;\r\n      });\r\n    },\r\n\r\n    step: function(circle){\r\n      circle.forEach(function(v){\r\n\r\n        // goto original angle\r\n        var a1 = v.data.OriginalLevel;\r\n        var a2 = v.data.degree ;\r\n        var angle = 180 - Math.abs(Math.abs(a1 - a2) - 180);\r\n\r\n        if (Math.abs(angle) >= 1) {\r\n          var angle2 = 180 - Math.abs(Math.abs((a1+1) - a2) - 180);\r\n          v.data.degree += angle2 > angle ? 1 : -1;\r\n          v.data.degree = v.data.degree % 360;\r\n        }\r\n\r\n        // goto original level\r\n        var l1 = v.data.OriginalLevel;\r\n        var l2 = v.data.level;\r\n\r\n        if (Math.abs(l1 - l2) > 0.1) {\r\n          v.data.level += l1 > l2 ? +0.1 : -0.1;\r\n        }\r\n\r\n      });\r\n    }\r\n  };\r\n\r\n  return ki;\r\n};\r\n\n},{}],6:[function(_dereq_,module,exports){\n/*global module */\r\n\r\nvar Search = {\r\n\r\n  DepthFirstSearch: function(vertex, distance, visited){\r\n    visited = visited || [];\r\n    var newVisited = [];\r\n    newVisited.pushArray(visited);\r\n    if (!visited.includes(vertex) && distance>0) {\r\n      newVisited.push(vertex);\r\n      vertex.visit();\r\n      vertex.neighbors.forEach(function(neighbor){\r\n        if (neighbor) {\r\n          Search.DepthFirstSearch(neighbor, distance - 1, newVisited);\r\n        }\r\n      });\r\n    }\r\n  },\r\n\r\n  BreadthFirstSearch: function (vertices, distance, visited) {\r\n    visited = visited || [];\r\n\r\n    if (distance > 0) {\r\n      var nextVertices = [];\r\n\r\n      vertices.forEach(function(vertex){\r\n        if (vertex) {\r\n          visited.push(vertex);\r\n          vertex.visit();\r\n          for (var i = vertex.neighbors.length - 1; i >= 0; i--) {\r\n            if (!visited.includes(vertex.neighbors[i])) {\r\n              nextVertices.push(vertex.neighbors[i]);\r\n            }\r\n          }\r\n        }\r\n      })\r\n\r\n      Search.BreadthFirstSearch(nextVertices, distance - 1, visited);\r\n    }\r\n  },\r\n\r\n  BreadthFirstSearchIterate: function (circle, vertices, visited) {\r\n    visited = visited || [];\r\n\r\n    if (visited.length === 0) {\r\n      circle.forEach(function(vertex){\r\n        vertex.data.visited   = false;\r\n        vertex.data.lastVisit = Number.MAX_VALUE;\r\n      });\r\n    }\r\n\r\n    if (vertices.length != 0) {\r\n      var nextVertices = [];\r\n\r\n      vertices.forEach(function(vertex){\r\n        if (vertex) {\r\n\r\n          visited.push(vertex);\r\n          vertex.data.visited   = true;\r\n          vertex.data.lastVisit = Date.now();\r\n\r\n          vertex.neighbors.forEach(function(neighbor){\r\n            if (neighbor && !neighbor.data.visited && !nextVertices.includes(neighbor)) {\r\n              nextVertices.push(neighbor);\r\n            }\r\n          })\r\n        }\r\n      });\r\n\r\n      return {\r\n        visited      : vertices,\r\n        visitedAll   : visited,\r\n        nextVertices : nextVertices,\r\n\r\n        next : function () {\r\n          return Search.BreadthFirstSearchIterate(circle, nextVertices, visited);\r\n        }\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = Search;\r\n\n},{}],7:[function(_dereq_,module,exports){\n/*global require, module */\r\n\r\nvar base = _dereq_('./makrene.visualizer');\r\n\r\nmodule.exports = function (context, circle, config) {\r\n\r\n  var offsetX = (config.width  - config.vertexWidth ) / 2;\r\n  var offsetY = (config.height - config.vertexHeight) / 2;\r\n\r\n  base(context,\r\n    circle,\r\n    config,\r\n    function(v) {\r\n      return offsetX + ((Math.cos(v.data.degree * 0.0174532925) * (v.data.level * config.levelOffset)) + config.vertexWidth  / 2);\r\n    },\r\n    function(v) {\r\n      return offsetY + ((Math.sin(v.data.degree * 0.0174532925) * (v.data.level * config.levelOffset)) + config.vertexHeight / 2);\r\n    });\r\n};\r\n\n},{\"./makrene.visualizer\":10}],8:[function(_dereq_,module,exports){\n/*global require, module */\r\n\r\nvar base = _dereq_('./makrene.visualizer');\r\n\r\n/**\r\n *  This visualizer draws a Makrene.Circle, from the center of the canvas, to the edges\r\n *  of the canvas. The outer ring of the circle will be drag out to the edges of the canvas \r\n *  rectangle. This gives a special effect of filled space. By default each ring, will be\r\n *  spaced equally to the outer edge. \r\n *\r\n *   -------B-------\r\n *   |     / \\     | \r\n *   A----5---6----C\r\n *   | \\ / \\ / \\ / |\r\n *   |  4---1---7  |\r\n *   | / \\ / \\ / \\ |  \r\n *   9----3---2----D\r\n *   |     \\ /     |\r\n *   -------8-------\r\n *\r\n *  @public\r\n *  @param {RenderingContext} context   - The canvas 2d rendering context.\r\n *  @param {Makrene.Circle} circle      - the circle structure\r\n *  @param {object} config              - The settings\r\n *  @param {number} config.width        - The width of the screen\r\n *  @param {number} config.height       - The height of the screen\r\n *  @param {number} config.levelOffset  - The space between each level\r\n *  @param {number} config.vertexWidth  - The width of each vertex box\r\n *  @param {number} config.vertexHeight - The height of each vertex box\r\n *  @param {string} config.lineColor    - The color of the lines\r\n *  @param {string} config.vertexColor  - The color of each vertex box\r\n *  @param {number} config.lineWidth    - The width of each line\r\n *  @return {undefined}\r\n */\r\nmodule.exports = function (context, circle, config) {\r\n\r\n  config.padding = config.padding || 0;\r\n\r\n  config.width -= config.padding * 2;\r\n  config.height -= config.padding * 2;\r\n\r\n  var offsetX = (config.width  - config.vertexWidth ) / 2;\r\n  var offsetY = (config.height - config.vertexHeight) / 2;\r\n\r\n  config.levelOffset = config.levelOffset || (config.width/2)/circle.numCircleLevels;\r\n\r\n  base(context,\r\n    circle,\r\n    config,\r\n    function(v) {\r\n      return (config.padding + ((v.data.level == circle.numCircleLevels) \r\n      ? edgeOfView(config, v.data.degree).x\r\n      : offsetX + ((Math.cos(v.data.degree * 0.0174532925) * (v.data.level * config.levelOffset)) + config.vertexWidth  / 2)));\r\n    },\r\n    function(v) {\r\n      return (config.padding + ((v.data.level == circle.numCircleLevels)\r\n      ? edgeOfView(config, v.data.degree-180).y\r\n      : offsetY + ((Math.sin(v.data.degree * 0.0174532925) * (v.data.level * config.levelOffset)) + config.vertexHeight / 2)));\r\n    });\r\n};\r\n\r\n/**\r\n *  The edgeOfView() method finds the point on the rectangle by degree from the middle point.\r\n *\r\n *  -------------X------\r\n *  |           /      |                Given an 2d rectangle with width and height, find the \r\n *  |          / 45°   |                x and y position, on the border of the rectangle, by an given\r\n *  |         /________| height         angle from the center of the rectangle.\r\n *  |                  |\r\n *  |                  |\r\n *  --------------------\r\n *          width\r\n *\r\n *  @link https://stackoverflow.com/questions/4061576/finding-points-on-a-rectangle-at-a-given-angle/31886696\r\n *  @remarks Solution was found as always on stackoverflow :P\r\n *  \r\n *  Syntax:\r\n *  var point = edgeOfView({ height: 100, width: 40 }, 45);\r\n *  console.log(point.x, point.y);  \r\n *\r\n *  @private\r\n *  @param {object} rect        - the rectangle box, on which to find the point by degree\r\n *  @param {number} rect.height - the height of the rectangle\r\n *  @param {number} rect.width  - the width of the rectangle\r\n *  @param {number} deg         - the degree from the center to find the point\r\n *  @return {object}            - The point with x, y coordinates.\r\n */\r\nfunction edgeOfView (rect, deg) {\r\n\r\n  var twoPI = Math.PI*2;\r\n  var theta = deg * Math.PI / 180;\r\n  \r\n  while (theta < -Math.PI) {\r\n    theta += twoPI;\r\n  }\r\n  \r\n  while (theta > Math.PI) {\r\n    theta -= twoPI;\r\n  }\r\n  \r\n  var rectAtan = Math.atan2(rect.height, rect.width);\r\n  var tanTheta = Math.tan(theta);\r\n  var region;\r\n  \r\n  if ((theta > -rectAtan) && (theta <= rectAtan)) {\r\n      region = 1;\r\n  } else if ((theta > rectAtan) && (theta <= (Math.PI - rectAtan))) {\r\n      region = 2;\r\n  } else if ((theta > (Math.PI - rectAtan)) || (theta <= -(Math.PI - rectAtan))) {\r\n      region = 3;\r\n  } else {\r\n      region = 4;\r\n  }\r\n  \r\n  var edgePoint = {x: rect.width/2, y: rect.height/2};\r\n  var xFactor = 1;\r\n  var yFactor = 1;\r\n  \r\n  switch (region) {\r\n    case 1: yFactor = -1; break;\r\n    case 2: yFactor = -1; break;\r\n    case 3: xFactor = -1; break;\r\n    case 4: xFactor = -1; break;\r\n  }\r\n  \r\n  if ((region === 1) || (region === 3)) {\r\n    edgePoint.x += xFactor * (rect.width / 2.);\r\n    edgePoint.y += yFactor * (rect.width / 2.) * tanTheta;\r\n  } else {\r\n    edgePoint.x += xFactor * (rect.height / (2. * tanTheta));\r\n    edgePoint.y += yFactor * (rect.height /  2.);\r\n  }\r\n  \r\n  return edgePoint;\r\n}\r\n\n},{\"./makrene.visualizer\":10}],9:[function(_dereq_,module,exports){\n/*global require, module */\r\n\r\nvar base = _dereq_('./makrene.visualizer');\r\n\r\nmodule.exports = function (context, circle, config) {\r\n\r\n  base(context,\r\n    circle,\r\n    config,\r\n    function(v) {\r\n      return config.offset + (((config.vertexWidth + config.margin) * v.data.col) + config.vertexWidth/2);\r\n    },\r\n    function(v) {\r\n      return config.offset + (((config.vertexHeight + config.margin ) * v.data.row) + config.vertexHeight/2);\r\n    });\r\n};\r\n\n},{\"./makrene.visualizer\":10}],10:[function(_dereq_,module,exports){\n/*global module */\r\n\r\nmodule.exports = function(context, graph, config, getPosX, getPosY){\r\n\r\n  config = Object.assign({\r\n\r\n   /**\r\n    *  The width of the screen\r\n    *  @type {number}\r\n    */\r\n    width: 100,\r\n\r\n   /**\r\n    *  The height of the screen\r\n    *  @type {number}\r\n    */\r\n    height: 100,\r\n    \r\n   /**\r\n    *  The space between each level\r\n    *  @type {number}\r\n    */\r\n    levelOffset: 10,\r\n    \r\n   /**\r\n    *  The width of each vertex box\r\n    *  @type {number}\r\n    */\r\n    vertexWidth: 100,\r\n    \r\n   /**\r\n    *  The height of each vertex box\r\n    *  @type {number}\r\n    */\r\n    vertexHeight: 100,\r\n    \r\n   /**\r\n    *  The color of the lines\r\n    *  @type {string}\r\n    */\r\n    lineColor: \"red\",\r\n    \r\n   /**\r\n    *  The color of each vertex box\r\n    *  @type {string}\r\n    */\r\n    vertexColor: \"white\",\r\n        \r\n   /**\r\n    *  The color of each vertex box\r\n    *  @type {string}\r\n    */\r\n    faceColor: \"black\",\r\n\r\n   /**\r\n    *  The width of each line\r\n    *  @type {number}\r\n    */\r\n    lineWidth: 100,\r\n\r\n    /**\r\n     *  Draw faces\r\n     *  @type {bool}\r\n     */\r\n     drawFaces: true,\r\n\r\n    /**\r\n     *  Draw edges\r\n     *  @type {bool}\r\n     */\r\n     drawEdges: true,\r\n\r\n    /**\r\n     *  Draw vertices\r\n     *  @type {bool}\r\n     */\r\n     drawVertices: true,\r\n\r\n    /**\r\n     *  Draw faces\r\n     *  @type {bool}\r\n     */\r\n     drawFacesDebugText: false,\r\n\r\n    /**\r\n     *  Draw faces\r\n     *  @type {bool}\r\n     */\r\n     drawEdgesDebugText: false,\r\n\r\n    /**\r\n     *  Draw faces\r\n     *  @type {bool}\r\n     */\r\n     drawVertexDebugText: false,\r\n     \r\n     /**\r\n      *  Draw Vertex Text Callback.\r\n      *  @type {function}\r\n      *  @param {Makrene.Vertex} v - the vertex\r\n      *  @return {string} - the text\r\n      */\r\n     getVertexDebugText: function (v) {\r\n      return 'i' + v.id +\r\n             'n' + v.neighbors.length + \r\n             'e' + v.edges.length + \r\n             'f' + v.faces.length;\r\n     }\r\n\r\n  }, config);\r\n\r\n  getPosX = getPosX || function (v) {\r\n    if (v.data.x)\r\n      return v.data.x;\r\n    v.data.x = Math.random() * config.width;\r\n    return v.data.x;\r\n  }\r\n\r\n  getPosY = getPosY || function (v) {\r\n    if (v.data.y)\r\n      return v.data.y;\r\n    v.data.y = Math.random() * config.height;\r\n    return v.data.y;\r\n  }\r\n\r\n  /**\r\n   *   Checks if an object is a function. \r\n   *   \r\n   *   From underscore.js\r\n   * \r\n   *   @param {any} obj - object to check.\r\n   *   @return {boolean} - true if object is function\r\n   */\r\n  var isCallable = function (obj) {\r\n    return !!(obj && obj.constructor && obj.call && obj.apply);\r\n  }\r\n\r\n  if (config.drawFaces) {\r\n    // draw Faces\r\n    graph.faces.forEach(function(face){\r\n      context.beginPath();\r\n      context.fillStyle = isCallable(config.faceColor) ? config.faceColor(face) : config.faceColor;\r\n      var vertex = face.vertices[0];\r\n      context.moveTo(getPosX(vertex), getPosY(vertex));\r\n      face.vertices.forEach(function(vertex){\r\n        context.lineTo(getPosX(vertex), getPosY(vertex));\r\n      })\r\n      context.fill();\r\n    })\r\n  }\r\n\r\n  if (config.drawEdges) {\r\n    // draw Edges\r\n    graph.edges.forEach(function(edge){\r\n      context.beginPath();\r\n      context.lineWidth = config.lineWidth;\r\n      context.strokeStyle = isCallable(config.lineColor) ? config.lineColor(edge) : config.lineColor;\r\n      var v1 = edge.vertices[0];\r\n      var v2 = edge.vertices[1];\r\n      context.moveTo(getPosX(v1), getPosY(v1));\r\n      context.lineTo(getPosX(v2), getPosY(v2));\r\n      context.stroke();\r\n    });\r\n  }\r\n\r\n  if (config.drawVertices) {\r\n    // draw vertexes\r\n    graph.forEach(function(v){\r\n      if (v){\r\n        context.beginPath();\r\n        context.fillStyle = isCallable(config.vertexColor) ? config.vertexColor(v) : config.vertexColor;\r\n        context.fillRect(\r\n          getPosX(v) - config.vertexWidth/2,\r\n          getPosY(v) - config.vertexHeight/2,\r\n          config.vertexWidth,\r\n          config.vertexHeight);     \r\n      }\r\n    });\r\n  }\r\n\r\n  if (config.drawVertexDebugText) {\r\n    // Draw text\r\n    graph.forEach(function(v){\r\n      if (v){\r\n        drawText(\r\n          context, \r\n          config.getVertexDebugText(v),\r\n          getPosX(v),\r\n          getPosY(v),\r\n          'red');\r\n      }\r\n    });\r\n  }\r\n\r\n  if (config.drawEdgesDebugText) {\r\n    graph.edges.forEach(function(edge){\r\n      var v1 = edge.vertices[0];\r\n      var v2 = edge.vertices[1];\r\n      drawText(\r\n        context,\r\n        'i' + edge.id +\r\n        'n' + edge.neighbors.length + \r\n        'v' + edge.vertices.length + \r\n        'f' + edge.faces.length,\r\n        getPosX(v1) + (getPosX(v2)- getPosX(v1))/2,\r\n        getPosY(v1) + (getPosY(v2) - getPosY(v1))/2,\r\n        'blue');\r\n    });\r\n  }\r\n\r\n  if (config.drawFacesDebugText) {\r\n    graph.faces.forEach(function(face){\r\n      var centerX = (getPosX(face.vertices[0]) + getPosX(face.vertices[1]) + getPosX(face.vertices[2])) / 3;\r\n      var centerY = (getPosY(face.vertices[0]) + getPosY(face.vertices[1]) + getPosY(face.vertices[2])) / 3;\r\n      \r\n      drawText(\r\n        context,\r\n        'i' + face.id +\r\n        'n' + face.neighbors.length + \r\n        'v' + face.vertices.length + \r\n        'e' + face.edges.length,\r\n        centerX,\r\n        centerY,\r\n        'black')\r\n    });\r\n  }\r\n};\r\n\r\nfunction drawText(context, content, x, y, color){\r\n  var lineHeight=context.measureText('M').width;\r\n  var width = context.measureText(content).width;\r\n  var padding = 2;\r\n  context.fillStyle = 'white';\r\n  context.fillRect(\r\n    (x - (width/2)) - padding,  \r\n    (y - (lineHeight/2)) - padding, \r\n    width + (padding *2), \r\n    lineHeight + (padding*2));\r\n\r\n  context.strokeStyle = context.fillStyle = color;\r\n  context.fillText(content, x - (width/2), y + (lineHeight/2));\r\n}\n},{}],11:[function(_dereq_,module,exports){\n// Polyfills\r\n\r\n/**\r\n *  Object.assign polyfill\r\n *  @by https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n */\r\nif (typeof Object.assign != 'function') {\r\n  (function () {\r\n    Object.assign = function (target) {\r\n      'use strict';\r\n      if (target === undefined || target === null) {\r\n        throw new TypeError('Cannot convert undefined or null to object');\r\n      }\r\n\r\n      var output = Object(target);\r\n      for (var index = 1; index < arguments.length; index++) {\r\n        var source = arguments[index];\r\n        if (source !== undefined && source !== null) {\r\n          for (var nextKey in source) {\r\n            if (source.hasOwnProperty(nextKey)) {\r\n              output[nextKey] = source[nextKey];\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return output;\r\n    };\r\n  })();\r\n}\r\n\r\n/**\r\n *  Array.prototype.includes polyfill\r\n *  @by https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\r\n */\r\nif (!Array.prototype.includes) {\r\n  Array.prototype.includes = function(searchElement /*, fromIndex*/ ) {\r\n    'use strict';\r\n    var O = Object(this);\r\n    var len = parseInt(O.length) || 0;\r\n    if (len === 0) {\r\n      return false;\r\n    }\r\n    var n = parseInt(arguments[1]) || 0;\r\n    var k;\r\n    if (n >= 0) {\r\n      k = n;\r\n    } else {\r\n      k = len + n;\r\n      if (k < 0) {k = 0;}\r\n    }\r\n    var currentElement;\r\n    while (k < len) {\r\n      currentElement = O[k];\r\n      if (searchElement === currentElement ||\r\n         (searchElement !== searchElement && currentElement !== currentElement)) { // NaN !== NaN\r\n        return true;\r\n      }\r\n      k++;\r\n    }\r\n    return false;\r\n  };\r\n}\r\n\r\n// My Polyfills\r\n\r\nif (!Array.prototype.first) {\r\n  Array.prototype.first = function(){\r\n    return this[0];\r\n  }\r\n}\n},{}]},{},[2])\n(2)\n});"]}