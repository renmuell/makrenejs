{"version":3,"sources":["makrene.js"],"names":["e","exports","module","define","amd","f","window","global","self","Makrene","t","n","r","s","o","u","a","require","i","Error","call","length","1","_dereq_","version","Vertex","Makrene_Vertex","data","vertex","Object","create","prototype","assign","edges","faces","neighbours","isVertex","value","Edge","Makrene_Edge","edge","vertices","isEdge","Face","Makrene_Face","face","isFace","Graph","Makrene_Graph","graph","_onChangeCallbacks","addVertex","push","emitChange","action","newObject","addEdge","addFace","forEach","fn","onChange","event","isGraph","2","Circle","Grid","Ki","Search","Visualizer","CircleFullscreen","../vendorJs/polyfill","./base/makrene.base","./graph/makrene.graph.circle","./graph/makrene.graph.grid","./ki/makrene.ki.circle","./search/makrene.search","./visualizer/makrene.visualizer","./visualizer/makrene.visualizer.circle","./visualizer/makrene.visualizer.circleFullscreen","./visualizer/makrene.visualizer.grid","3","getIndex","position","level","numVertexOnLevel","getPositionLevel","index","Math","floor","linkWithLevelBelowVertexes","levelIndex","vertexLevelIndex","lastLevelVertexes","v","index1","index2","createEdge","createFace","linkWithLevelAboveVertexes","aboveLeveVertexes","linkWithNeighbourVertex","neigbour","filter","includes","v1","v2","id","linkEdgeWithVertexEdges","v3","max","linkFaceWithVertexFaces","first","calculateVertexDegree","levelPos","levelDegreeOffset","Makrene_Circle","config","_numCircleLevels","_circleLength","numCircleLevels","get","isEmpty","undefined","center","last","arguments","addVertexAt","pop","object","removeVertex","removedObject","shift","removedVertex","indexZeroVertieces","j","degree","k","unshift","oldLength","indexLastVertieces","fill","start","end","min","pos","expandFromOudside","num","expandFromInside","collapseFromOudside","deletedLevel","collapseFromInside","clear","vertexAt","facesAt","getFacesLevelArray","indexOf","i2","removeVertexFrom","neighbour","splice","vertexIndex","callback","levels","item","res","map","toString","../base/makrene.base","4","Dir","Top","Right","Bottom","Left","TopLeft","TopRight","BottomRight","BottomLeft","rows","cols","init","createVertexes","linkVertexes","createEdges","linkEdges","createFaces","linkFaces","c","row","col","v4","5","ki","circle","Orginaldegree","OrginalLevel","step","a1","a2","angle","abs","angle2","l1","l2","6","DephFirstSearch","distance","visited","newVisited","pushArray","visit","BreadthFirstSearch","nextvertices","BreadthFirstSearchIterate","lastVisit","Number","MAX_VALUE","Date","now","visitedAll","next","7","base","context","offsetX","width","vertexWidth","offsetY","height","vertexHeight","cos","levelOffset","sin","./makrene.visualizer","8","edgeOfView","rect","deg","twoPI","PI","theta","region","rectAtan","atan2","tanTheta","tan","edgePoint","x","y","xFactor","yFactor","9","offset","margin","10","drawText","content","color","lineHeight","measureText","padding","fillStyle","fillRect","strokeStyle","fillText","getPosX","getPosY","lineColor","vertexColor","lineWidth","drawFaces","drawEdges","drawVertices","drawFacesDebugText","drawEdgesDebugText","drawVertexDebugText","random","beginPath","moveTo","lineTo","stroke","centerX","centerY","11","target","TypeError","output","source","nextKey","hasOwnProperty","Array","searchElement","O","this","len","parseInt","currentElement"],"mappings":"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","file":"makrene-min.js","sourcesContent":["!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Makrene=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n/*global module */\n\n/**\n *  Core components of graph library.\n */\nvar Makrene = {\n\n  /**\n   *  Current Version of library\n   *  @public\n   *  @type {string}\n   */\n  version : '0.1.0',\n\n  /**\n   *  The factory Vertex(), create an new vertex object.\n   * \n   *  A vertex is a fundamental element of a graph. It represent an node which can hold data and\n   *  can be linked to create a graph.\n   *\n   *  Syntax:\n   *  var vertex = Makrene.Vertex();\n   *\n   *  @public\n   *  @param {object} data - The data of the vertex\n   *  @return {Makrene.Vertex} - New vertex object\n   */\n  Vertex: function Makrene_Vertex (data) {\n\n    var vertex = Object.create(Makrene_Vertex.prototype, {});\n\n    return Object.assign(vertex, {\n      edges      : [],\n      faces      : [],\n      neighbours : [],\n      data       : data || {}\n    });\n  },\n\n  /**\n   *  The isVertex() method determines whether the passed value is an Vertex object.\n   *\n   *  Syntax:\n   *  Makrene.isVertex(value);\n   *  \n   *  @param {object} value - The value to be checked.\n   *  @return {bool} - true if the value is an Vertex; otherwise, false.\n   */\n  isVertex: function (value){\n    if (typeof value === 'undefined') { return false; }\n    return value instanceof Makrene.Vertex;\n  },\n\n  /**\n   *  The factory Edge(), create an new edge object.\n   * \n   *  A edge represents a connection of two vertices.\n   *\n   *  Syntax:\n   *  var edge = Makrene.Edge();\n   *\n   *  @public\n   *  @param {object} data - The data of the edge\n   *  @return {Makrene.Edge} - New edge object\n   */\n  Edge: function Makrene_Edge(data){\n\n    var edge = Object.create(Makrene_Edge.prototype, {});\n\n    return Object.assign(edge, {\n      vertices   : [],\n      faces      : [],\n      neighbours : [],\n      data       : data || {}\n    });\n  },\n\n  /**\n   *  The isEdge() method determines whether the passed value is an Edge object.\n   *\n   *  Syntax:\n   *  Makrene.isEdge(value);\n   *  \n   *  @param {object} value - The value to be checked.\n   *  @return {bool} - true if the value is an Edge; otherwise, false.\n   */\n  isEdge: function (value){\n    if (typeof value === 'undefined') { return false; }\n    return value instanceof Makrene.Edge;\n  },\n\n  /**\n   *  The factory Face(), create an new Face object.\n   * \n   *  A face represents a area between closed connected edges. Also known as polygon.\n   *\n   *  Syntax:\n   *  var face = Makrene.Face();\n   *\n   *  @public\n   *  @param {object} data - The data of the face\n   *  @return {Makrene.Face} - New face object\n   */\n  Face: function Makrene_Face(data){\n\n    var face = Object.create(Makrene_Face.prototype, {});\n\n    return Object.assign(face, {\n      vertices   : [],\n      edges      : [],\n      neighbours : [],\n      data       : data || {}\n    });\n  },\n\n  /**\n   *  The isFace() method determines whether the passed value is an Face object.\n   *\n   *  Syntax:\n   *  Makrene.isFace(value);\n   *  \n   *  @param {object} value - The value to be checked.\n   *  @return {bool} - true if the value is an Face; otherwise, false.\n   */\n  isFace: function (value){\n    if (typeof value === 'undefined') { return false; }\n    return value instanceof Makrene.Face;\n  },\n\n  /**\n   *  The factory Graph(), create an new Graph object.\n   * \n   *  A graph is a set of connected vertices, edges and faces.\n   *\n   *  Syntax:\n   *  var face = Makrene.Graph();\n   *\n   *  @public\n   *  @param {object} data - The data of the graph\n   *  @return {Makrene.Graph} - New graph object\n   */\n  Graph: function Makrene_Graph(data){\n\n    // new graph instance\n    var graph = Object.create(Makrene_Graph.prototype, {});\n\n    return Object.assign(graph, {\n\n      /**\n       *  List of callback function for the onChange() Method.\n       *\n       *  @private\n       *  @type {array<function>}\n       */\n      _onChangeCallbacks: [],\n \n      /**\n       *  List of vertices.\n       *\n       *  @public\n       *  @type {array<Makrene.Vertex>}\n       */\n      vertices   : [],\n \n      /**\n       *  List of edges.\n       *\n       *  @public\n       *  @type {array<Makrene.Edge>}\n       */\n      edges      : [],\n \n      /**\n       *  List of faces.\n       *\n       *  @public\n       *  @type {array<Makrene.Face>}\n       */\n      faces      : [],\n \n      /**\n       *  List of neighbours.\n       *\n       *  @public\n       *  @type {array<Makrene.Graph>}\n       */\n      neighbours : [],\n \n      /**\n       *  Data object.\n       *\n       *  @public\n       *  @type {object}\n       */\n      data       : data || {},\n\n      /**\n       *  Add vertex to graph.\n       *\n       *  @public\n       *  @fires Change-Event\n       *  @param {Makrene.Vertex} vertex - object to add\n       *  @return {Makrene.Graph}        - this graph instance\n       */\n      addVertex : function(vertex) { \n        graph.vertices.push(vertex); \n\n        graph.emitChange({\n          action: \"addVertex\",\n          graph: graph,\n          newObject: vertex\n        }); \n        \n        return graph; \n      },\n\n      /**\n       *  Add edge to graph.\n       *\n       *  @public\n       *  @fires Change-Event\n       *  @param {Makrene.Edge} edge - object to add\n       *  @return {Makrene.Graph}    - this graph instance\n       */\n      addEdge   : function(edge) { \n        graph.edges.push(edge);    \n      \n        graph.emitChange({\n          action: \"addEdge\",\n          graph: graph,\n          newObject: edge\n        }); \n\n        return graph; \n      },\n\n      /**\n       *  Add face to graph.\n       *\n       *  @public\n       *  @fires Change-Event\n       *  @param {Makrene.Face} face - object to add\n       *  @return {Makrene.Graph}    - this graph instance\n       */\n      addFace   : function(face)   { \n        graph.faces.push(face);    \n\n        graph.emitChange({\n          action: \"addFace\",\n          graph: graph,\n          newObject: face\n        }); \n\n        return graph;\n      },\n\n      /**\n       *  The forEach() method executes a provided function once for each vertex of the graph.\n       *\n       *  @public\n       *  @param {function} fn - callback function for each vertex\n       *  @return {undefined}\n       */\n      forEach   : function(fn)     { graph.vertices.forEach(fn); },\n\n      /**\n       *  The onchange event occurs when the value of an graph component has been changed.\n       *\n       *  @public\n       *  @param {function} fn - callback when an change is been emitted. \n       *  @return {undefined}\n       */\n      onChange  : function(fn)     { graph._onChangeCallbacks.push(fn); },\n\n      /**\n       *  Triggers a change event, which will call all listeners.\n       *\n       *  @public\n       *  @param {object} event - the event data which will be sent\n       *  @return {undefined}\n       */\n      emitChange: function(event)  { graph._onChangeCallbacks.forEach(function(fn){ fn(event) }); }\n    });\n  },\n\n  /**\n   *  The isGraph() method determines whether the passed value is an Graph object.\n   *\n   *  Syntax:\n   *  Makrene.isGraph(value);\n   *  \n   *  @param {object} value - The value to be checked.\n   *  @return {bool} - true if the value is an Graph; otherwise, false.\n   */\n  isGraph: function (value){\n    if (typeof value === 'undefined') { return false; }\n    return value instanceof Makrene.Graph;\n  }\n\n};\n\nmodule.exports = Makrene;\n\n},{}],2:[function(_dereq_,module,exports){\n/*global require, module */\n\n_dereq_('../vendorJs/polyfill')\n\n/**\n *  Combines all Makrene components into on usable namespace object.\n */\nmodule.exports = Object.assign(_dereq_('./base/makrene.base'), {\n  Circle : _dereq_('./graph/makrene.graph.circle'),\n  Grid   : _dereq_('./graph/makrene.graph.grid'),\n  Ki     : { Circle : _dereq_('./ki/makrene.ki.circle') },\n  Search : _dereq_('./search/makrene.search'),\n  Visualizer : Object.assign(_dereq_('./visualizer/makrene.visualizer'), {\n    Grid   : _dereq_('./visualizer/makrene.visualizer.grid'),\n    Circle : _dereq_('./visualizer/makrene.visualizer.circle'),\n    CircleFullscreen : _dereq_('./visualizer/makrene.visualizer.circleFullscreen')\n  })\n});\n\n},{\"../vendorJs/polyfill\":11,\"./base/makrene.base\":1,\"./graph/makrene.graph.circle\":3,\"./graph/makrene.graph.grid\":4,\"./ki/makrene.ki.circle\":5,\"./search/makrene.search\":6,\"./visualizer/makrene.visualizer\":10,\"./visualizer/makrene.visualizer.circle\":7,\"./visualizer/makrene.visualizer.circleFullscreen\":8,\"./visualizer/makrene.visualizer.grid\":9}],3:[function(_dereq_,module,exports){\n(function() {\n\n/*global require, module */\n\nvar Makrene = _dereq_('../base/makrene.base')\n\n/**\n *  Multi linked circle mesh.\n *\n *     -----B-----\n *    /    / \\    \\\n *   A----5---6----C\n *   | \\ / \\ / \\ / |\n *   |  4---1---7  |\n *   | / \\ / \\ / \\ |  Circle with numVertexOnLevel = 6\n *   9----3---2----D         and  length = 13\n *    \\    \\ /    /\n *     -----8-----\n *\n *  The circle contains multiple levels/rings, each with a \n *  max number of vertices. The center contains one vertex, connected\n *  with each of the first level/ring. Each level vertex is connected\n *  with their visual neighbour and two vertices of the lower and \n *  higher level/ring (because each level/ring is offset by half \n *  the distance of each vertex, which puts every vertex in the \n *  middle of the vertices below and above). \n *\n *  Behaves like a sequence. The first element is the center of \n *  the circle and it grows outside, by which the last element \n *  is the vertex with the highest degree/angle on the outer \n *  level/ring.\n *  \n *  Syntax:\n *  \n *  let circle = Makrene.Circle();\n *\n *  @public\n *  @implements {Makrene.Graph}\n *  @param {object} config - the Settigns\n *  @param {number} config.numVertexOnLevel - @see graph.numVertexOnLevel\n *  @returns {Makrene.Circle} Circle\n */\nmodule.exports = function Makrene_Circle(config) {\n\n  /***\n   *       _____             __ _       \n   *      / ____|           / _(_)      \n   *     | |     ___  _ __ | |_ _  __ _ \n   *     | |    / _ \\| '_ \\|  _| |/ _` |\n   *     | |___| (_) | | | | | | | (_| |\n   *      \\_____\\___/|_| |_|_| |_|\\__, |\n   *                               __/ |\n   *                              |___/ \n   */\n\n  config = Object.assign({\n\n   /**\n    *  default setting for numVertexOnLevel\n    *  @see graph.numVertexOnLevel\n    */\n    numVertexOnLevel: 8\n\n  }, config);\n\n  /***\n   *      ______ _      _     _     \n   *     |  ____(_)    | |   | |    \n   *     | |__   _  ___| | __| |___ \n   *     |  __| | |/ _ \\ |/ _` / __|\n   *     | |    | |  __/ | (_| \\__ \\\n   *     |_|    |_|\\___|_|\\__,_|___/\n   *                                \n   *                                \n   */\n\n   /**\n    *  @private\n    *  @see graph.numCircleLevels\n    */\n   var _numCircleLevels = 0;\n   \n   /**\n    *  @private\n    *  @see graph.length\n    */\n   var _circleLength = 0;\n\n  /***\n   *      _____                           _   _           \n   *     |  __ \\                         | | (_)          \n   *     | |__) | __ ___  _ __   ___ _ __| |_ _  ___  ___ \n   *     |  ___/ '__/ _ \\| '_ \\ / _ \\ '__| __| |/ _ \\/ __|\n   *     | |   | | | (_) | |_) |  __/ |  | |_| |  __/\\__ \\\n   *     |_|   |_|  \\___/| .__/ \\___|_|   \\__|_|\\___||___/\n   *                     | |                              \n   *                     |_|                              \n   */\n  var graph = Object.create(Makrene_Circle.prototype, {\n\n    /**\n     *  Gets the number of max vertex count per level/ring.\n     *\n     *  @public\n     *  @default 8\n     *  @type {number}\n     */\n    numVertexOnLevel: {\n      value: config.numVertexOnLevel\n    },\n\n    /**\n     *  Gets the number of circle levels/rings.\n     *\n     *  @public\n     *  @type {number}\n     */\n    numCircleLevels: {\n      get: function(){\n        return _numCircleLevels;\n      }\n    },\n\n    /**\n     *  The number of vertices in the circle/graph.\n     *\n     *  @public\n     *  @type {number}\n     */\n    length  : {\n      get: function(){\n        return _circleLength;\n      }\n    },\n\n    /**\n     *  Is circle empty.\n     *\n     *  @public\n     *  @type {bool}\n     */\n    isEmpty : {\n      get: function(){\n        return graph.vertices.length === 0;\n      }\n    },\n\n    /**\n     *  First Element of circle/graph, which is the center of the circle.\n     *\n     *  @public\n     *  @type {Makrene.Vertex}\n     */\n    first: {\n      get: function(){\n        return graph.vertices[0] ? graph.vertices[0][0] : undefined;\n      }\n    },\n\n    /**\n     *  Visual center element of circle/graph. Same as first().\n     *\n     *  @public\n     *  @alias graph.first\n     *  @type {Makrene.Vertex}\n     */\n    center: {\n      get: function(){\n        return graph.first;\n      }\n    },\n\n    /**\n     *  Last element of circle/graph, which is the vertex with the \n     *  highest degree/angle on the outer level/ring.\n     *\n     *  @public\n     *  @type {Makrene.Vertex}\n     */\n    last: {\n      get: function(){\n        return graph.isEmpty \n          ? undefined \n          : graph.length === 1 \n            ? graph.center \n            : graph.vertices[_numCircleLevels][graph.vertices[_numCircleLevels].length - 1];\n      }\n    }\n  });\n\n  /***\n   *      __  __      _   _               _     \n   *     |  \\/  |    | | | |             | |    \n   *     | \\  / | ___| |_| |__   ___   __| |___ \n   *     | |\\/| |/ _ \\ __| '_ \\ / _ \\ / _` / __|\n   *     | |  | |  __/ |_| | | | (_) | (_| \\__ \\\n   *     |_|  |_|\\___|\\__|_| |_|\\___/ \\__,_|___/\n   *                                                                                     \n   */\n  return Object.assign(graph, Makrene.Graph(), {\n\n    /**\n     *  The push() method adds one or more elements to the end of \n     *  an Circle and returns the new length of the Circle.\n     *\n     *  Syntax:\n     *  let newCircleLength = circle.push(vertex1[, ...[, vertexN]])\n     *\n     *  @public\n     *  @fires Change-Event\n     *  @param {...Makrene.Vertex|object} v - The elements to add to the end of the Circle.\n     *                                        New vertex or data for new vertex.\n     *  @return {number} - Length after push of vertex\n     */\n    push: function () {\n\n      [].forEach.call(arguments, function (v) {\n\n        if (typeof v === 'undefined' || !(v instanceof Makrene.Vertex)) {\n          v = Makrene.Vertex(v || {});\n        }\n\n        if (!graph.isEmpty \n         && (_numCircleLevels == 0 || graph.vertices[_numCircleLevels].length === graph.numVertexOnLevel)) {\n\n          _numCircleLevels++;\n        }\n\n        graph.vertices[_numCircleLevels] = graph.vertices[_numCircleLevels] || [];\n\n        graph.addVertexAt(_numCircleLevels, graph.vertices[_numCircleLevels].length, v);  \n\n        graph.emitChange({\n          action: \"push\",\n          graph: graph,\n          newObject: v\n        }); \n\n      });\n\n      return graph.length;\n    },\n  \n    /**\n     *  The pop() method removes the last element from an Circle and returns that element. \n     *  This method changes the length of the Circle.\n     *\n     *  Syntax:\n     *  var vertex = circle.pop()\n     *\n     *  @public\n     *  @fires Change-Event\n     *  @return {Makrene.Vertex|undefined} - The removed element from the circle; \n     *                                       undefined if the circle is empty.\n     */\n    pop: function(){\n\n      var object = graph.removeVertex(graph.last);\n\n      graph.emitChange({\n        action: \"pop\",\n        graph: graph,\n        removedObject: object\n      }); \n\n      return object;\n    },\n\n    /**\n     *  The shift() method removes the first element from an Circle and returns that removed element. \n     *  This method changes the length of the Circle.\n     *\n     *  Syntax:\n     *  var vertex = circle.shift()\n     *\n     *  @public\n     *  @fires Change-Event\n     *  @return {Makrene.Vertex|undefined} - The removed element from the circle; \n     *                                       undefined if the circle is empty.\n     *\n     *  @remarks Algorithm-idea: fast rotate to center\n     *           - remove middle\n     *           - remove every first element of each level, shift rest one position to front\n     *           - add removed element one level lower on freed last position\n     */\n    shift: function(){\n\n      var removedVertex;\n\n      if (graph.isEmpty) { return; }\n      if (graph.length === 1) {\n        removedVertex = graph.last;\n        graph.removeVertex(graph.last);\n      } else {\n\n        // remove all level index 0\n        var indexZeroVertieces = [];\n        for (var i = graph.vertices.length - 1; i >= 0; i--) {\n          indexZeroVertieces[i] = graph.vertices[i][0];\n          graph.removeVertex(graph.vertices[i][0]);\n        }\n\n        // shift all levels --> undefined at last max level index\n        for (var j = graph.vertices.length - 1; j >= 0; j--) {\n          graph.vertices[j].shift();\n\n          graph.vertices[j].forEach(function(v, index){\n            if (v){\n              v.data.degree = calculateVertexDegree(graph, j, index);\n              v.data.level  = j;\n              v.id = v.data.level + '_' + v.data.degree;\n            }\n          });\n        }\n        _circleLength--;\n\n        // add all index 0 at the end of level below\n        graph.addVertexAt(0, 0, indexZeroVertieces[1]);\n        for (var k = indexZeroVertieces.length - 1; k >= 2; k--) {\n          graph.addVertexAt(k - 1, graph.numVertexOnLevel - 1, indexZeroVertieces[k]);\n        }\n\n        removedVertex = indexZeroVertieces[0];\n      }\n\n      graph.emitChange({\n        action: \"shift\",\n        graph: graph,\n        removedObject:removedVertex\n      }); \n\n      return removedVertex;\n    },\n    \n    /**\n     *  The unshift() method adds one or more elements to the beginning of \n     *  an Circle and returns the new length of the Circle.\n     *\n     *  Syntax:\n     *  let newCircleLength = circle.unshift(vertex1[, ...[, vertexN]])\n     *\n     *  @public\n     *  @fires Change-Event\n     *  @param {...Makrene.Vertex|object} v - The elements to add to the beginning of the Circle.\n     *                                        New vertex or data for new vertex.\n     *  @return {number} - Length after push of vertex\n     */\n    unshift: function(){\n\n      [].forEach.call(arguments, function (v) {\n\n        if (typeof v === 'undefined' || !(v instanceof Makrene.Vertex)) {\n          v = Makrene.Vertex(v || {});\n        }\n\n        if (graph.isEmpty) { \n          graph.addVertexAt(0, 0, v);  \n          _circleLength = 1;\n        } else {\n          var oldLength = graph.length;\n          // remove every last index\n          var indexLastVertieces = [graph.center];\n          graph.removeVertex(graph.center);\n          for (var i = graph.vertices.length - 1; i >= 0; i--) {\n            if (graph.vertices[i][graph.numVertexOnLevel-1]){\n              indexLastVertieces[i] = graph.vertices[i][graph.numVertexOnLevel-1];\n              graph.removeVertex(graph.vertices[i][graph.numVertexOnLevel-1]);\n            }\n          }\n\n          // unshift every level -> insert undefined at 0\n          for (var j = graph.vertices.length - 1; j >= 0; j--) {\n            graph.vertices[j].unshift(undefined);\n\n            graph.vertices[j].forEach(function(v, index){\n              if (v){\n                v.data.degree = calculateVertexDegree(graph, j, index);\n                v.data.level  = j;\n                v.id = v.data.level + '_' + v.data.degree;\n              }\n            });\n          }\n          _circleLength = oldLength;\n\n          // add all last index at beginning of level above\n          for (var k = indexLastVertieces.length - 1; k >= 0; k--) {\n            graph.addVertexAt(k + 1, 0, indexLastVertieces[k]);\n          }\n        \n          // add vertex at 0,0\n          graph.addVertexAt(0, 0, v);\n\n          if (!graph.isEmpty \n           && (_numCircleLevels == 0 || graph.vertices[_numCircleLevels].length === graph.numVertexOnLevel)) {\n\n            _numCircleLevels++;\n          }\n        }\n\n        graph.emitChange({\n          action: \"unshift\",\n          graph: graph,\n          newObject: v\n        });\n\n      });\n\n      return graph.length;\n    },\n\n    /**\n     *  The fill() method fills all the elements of an circle from a start index to an end index with a static value. \n     *  The end index is not included.\n     *\n     *  Syntax:\n     *  circle.fill(value[, start[, end]])\n     *\n     *  @param {Makrene.Vertex|object} value - Value to fill an circle.\n     *  @param {number} start - Start index, defaults to 0.\n     *  @param {number} end - End index, defaults to this.length.\n     *  @return {Makrene.Circle} - The modified circle. \n     */\n    fill: function (value, start, end) {\n\n      if (typeof value === 'undefined' || !(value instanceof Makrene.Vertex)) {\n        value = Makrene.Vertex(value || {});\n      }\n\n      start = start || 0;\n      start = start < 0 ?\n        Math.max(graph.length + start, 0) :\n        Math.min(start, graph.length);\n\n      end = end || graph.length;\n\n      end = end < 0 ?\n        Math.max(graph.length + end, 0) :\n        Math.min(end, graph.length);\n\n      while (start < end) {\n        var pos = getPositionLevel(graph, start);\n        graph.addVertexAt(pos.level, pos.position, value);\n        start++;\n      }\n\n      return graph;\n    },\n\n    expandFromOudside: function(num){\n      num = num || graph.numVertexOnLevel;\n\n      for(;num>0;num--){ \n        graph.push(Makrene.Vertex());\n      }\n\n      return graph.length;\n    },\n\n    expandFromInside: function(num){\n      num = num || graph.numVertexOnLevel;\n\n      for(;num>0;num--){ \n        graph.unshift(Makrene.Vertex());\n      }\n\n      return graph.length;\n    },\n\n    collapseFromOudside: function(num){\n      var deletedLevel = [];\n\n      num = num || graph.numVertexOnLevel;\n\n      for(;num>0;num--){ \n        deletedLevel.push(graph.pop());\n      }\n\n      return deletedLevel;\n    },\n\n    collapseFromInside: function(num){\n      var deletedLevel = [];\n\n      num = num || graph.numVertexOnLevel;\n\n      for(;num>0;num--){ \n        deletedLevel.push(graph.shift());\n      }\n\n      return deletedLevel;\n    },\n\n    clear: function(){\n      _numCircleLevels = 0;\n      _circleLength    = 0;\n      graph.faces       = [];\n      graph.edges       = [];\n      graph.vertices    = [];\n      graph.neighbours  = [];\n      graph.data  = {};\n    },\n\n    includes: function(vertex){\n      return graph.filter(function(v){ return v === vertex; }).length > 0;\n    },\n\n    vertexAt: function(level, pos){\n      return graph.vertices[level] ? graph.vertices[level][pos] : undefined;\n    },\n\n    facesAt: function(level){\n      return graph.faces.filter(function(f){ return f.data.level == level; });\n    },\n\n    getFacesLevelArray: function(){\n      var r = [];\n      graph.faces.forEach(function(f){ \n        \n        if (typeof r[f.data.level] === 'undefined') {\n          r[f.data.level] = []; \n        }\n\n        r[f.data.level].push(f); \n      });\n\n      return r;\n    },\n\n    indexOf: function(vertex){\n      var index = 0;\n      \n      for (var i = graph.vertices.length - 1, i2 = 0; i >= 0; i--, i2++) {\n        var levelIndex = graph.vertices[i2].indexOf(vertex);\n        if (levelIndex >= 0){\n          return index + levelIndex;\n        } else {\n          index += graph.vertices[i2].length;\n        }\n      }\n\n      return -1;\n    },\n\n    addVertexAt: function(level, pos, v){\n\n      if (graph.numVertexOnLevel == 0){ return; }\n      if (graph.numVertexOnLevel < pos){ return; }\n      if (graph.level == 0 && pos !== 0) { return; }\n\n      graph.vertices[level] = graph.vertices[level] || [];\n\n      if (typeof v === 'undefined') {\n        graph.vertices[level][pos] = undefined;\n      } else {\n\n        v.data.degree = calculateVertexDegree(graph, level, pos);\n        v.data.level  = level;\n        v.id = v.data.level + '_' + v.data.degree;\n        graph.vertices[level][pos] = v;\n\n        //Link center with everyone above\n        if (level === 0) {\n          if (graph.vertices[1]) {\n            graph.vertices[1].forEach(function(vertex, index){\n              graph.removeVertex(vertex);\n              graph.addVertexAt(1, index, vertex);\n            });\n          }\n        } else {\n          //linking with level below\n          linkWithLevelBelowVertexes(graph, level, pos);\n\n          //linking with level above\n          linkWithLevelAboveVertexes(graph, level, pos);\n\n          //link with previous neighbour\n          linkWithNeighbourVertex(\n            graph, \n            v, \n            graph.vertices[level][(pos - 1 + graph.numVertexOnLevel) % graph.numVertexOnLevel]);\n\n          //link with next neigour \n          linkWithNeighbourVertex(\n            graph, \n            v, \n            graph.vertices[level][(pos + 1 + graph.numVertexOnLevel) % graph.numVertexOnLevel]); \n        }  \n      }\n      \n      var index = getIndex(graph, pos, level);\n      if (index > graph.length - 1) {\n        _circleLength = index + 1;  \n      }  \n    },\n\n    removeVertexFrom: function(level, pos){\n      return graph.removeVertex(graph.vertexAt(level, pos));\n    },\n\n    removeVertex: function(vertex) {\n      if (vertex){\n        // remove neighbour\n        vertex.neighbours.forEach(function(neighbour){\n          neighbour.neighbours.splice(neighbour.neighbours.indexOf(vertex), 1);\n        });\n        \n        // remove edges\n        vertex.edges.forEach(function(edge){\n          edge.neighbours.forEach(function(neighbour){\n            neighbour.neighbours.splice(neighbour.neighbours.indexOf(edge), 1);\n          });\n\n          edge.vertices.forEach(function(v){\n            if (v != vertex) {\n              v.edges.splice(v.edges.indexOf(edge), 1);\n            }\n          });\n\n          edge.faces.forEach(function(face){\n            face.edges.splice(face.edges.indexOf(edge), 1);\n          });\n\n          \n          graph.edges.splice(graph.edges.indexOf(edge), 1);\n        });\n\n        // remove faces\n        vertex.faces.forEach(function(face){\n          face.neighbours.forEach(function(neighbour){\n            neighbour.neighbours.splice(neighbour.neighbours.indexOf(face), 1);\n          });\n\n          face.vertices.forEach(function(v){\n            if (v != vertex) {\n              v.faces.splice(v.faces.indexOf(face), 1);\n            }\n          });\n\n          face.edges.forEach(function(edge){\n            edge.faces.splice(edge.faces.indexOf(face), 1);\n          });\n\n          graph.faces.splice(graph.faces.indexOf(face), 1);\n        });\n\n        var vertexIndex = 0;\n        // remove vertex\n        graph.vertices.forEach(function(level, index){\n          if (level.includes(vertex)){\n            vertexIndex = getIndex(graph, level.indexOf(vertex), index);\n            if (level.indexOf(vertex) == level.length - 1){\n              level.length = level.length - 1;\n            } else {\n              delete level[level.indexOf(vertex)];\n            }\n            \n            if (_numCircleLevels == index && level.length === 0) {\n              if (graph.numCircleLevels === 0) {\n                graph.vertices = [];\n              } else {\n                _numCircleLevels--;\n                graph.vertices.splice(graph.vertices.indexOf(level), 1);\n              }\n            }\n          }\n        });\n\n        vertex.edges = [];\n        vertex.faces = [];\n        vertex.neighbours = [];\n\n        if (vertexIndex == _circleLength - 1) {\n          _circleLength--;\n        }\n        \n        return vertex;\n      }\n    },\n\n    /**\n     *  The forEach() method executes a provided function once for each array element.\n     *\n     *  Syntax:\n     *  circle.forEach(function callback(currentVertex[, index[, graph]]) {\n     *    //your iterator\n     *  }[, thisArg]);\n     *\n     *  @public\n     *  @param {function} callback - Function is a predicate, to test each element of the circle. \n     *                               Return true to keep the element, false otherwise. It accepts three arguments:\n     *                          currentVertex  Optional\n     *                              The current element being processed in the circle.\n     *                          index   Optional\n     *                              The index of the current element being processed in the circle.\n     *                          circle   Optional\n     *                              The circle filter was called upon.\n     *\n     *  @return {array} - A new array with the elements that pass the test. If no elements pass the test, an empty array will be returned.\n     */\n    forEach: function(callback){\n      graph.vertices.forEach(function(levels, level){ \n        levels.forEach(function(item, position){\n          callback(item, getIndex(graph, position, level), graph);\n        }); \n      });\n    },\n\n    /**\n     *  The filter() method creates a new array with all elements \n     *  that pass the test implemented by the provided function.\n     *\n     *  Syntax:\n     *  var newArray = circle.filter(callback(vertex[, index[, graph]])[, thisArg])\n     *\n     *  @public\n     *  @param {function} callback - Function is a predicate, to test each element of the circle. \n     *                               Return true to keep the element, false otherwise. It accepts three arguments:\n     *                          vertex  Optional\n     *                              The current element being processed in the circle.\n     *                          index   Optional\n     *                              The index of the current element being processed in the circle.\n     *                          graph   Optional\n     *                              The circle filter was called upon.\n     *\n     *  @return {array} - A new array with the elements that pass the test. If no elements pass the test, an empty array will be returned.\n     */\n    filter: function(callback){\n      var res = [];\n\n      graph.forEach(function(vertex, index){\n        if (callback(vertex, index, graph)){\n          res.push(vertex);\n        }\n      });\n\n      return res;\n    },\n\n    /**\n     *  The map() method creates a new array with the results of calling a provided function on \n     *  every element in the calling circle.\n     *\n     *  Syntax:\n     *  var new_array = arr.map(function callback(currentVertex[, index[, graph]]) {\n     *    // Return element for new_array\n     *  }[, thisArg])\n     *\n     *  @public\n     *  @param {function} callback - Function that produces an element of the new Array, taking three arguments:\n     *                          currentVertex  Optional\n     *                              The value of the current element being processed in the circle.\n     *                          index   Optional\n     *                              The index of the current element being processed in the circle.\n     *                          graph   Optional\n     *                              The circle that forEach() is being applied to.\n     *\n     *  @return {array} - A new array with each element being the result of the callback function.\n     */\n    map: function(callback){\n      var res = [];\n\n      graph.forEach(function(vertex, index){\n        res.push(callback(vertex, index, graph));\n      });\n\n      return res;\n    },\n\n    /**\n     *  The toString() method returns a string representing the circle.\n     *\n     *  Syntax:\n     *  circle.toString()\n     *\n     *  @public\n     *  @return {string} - A string representing the circle.\n     */\n    toString: function () {\n      return 'Makrene.Circle' +\n             '\\n\\tNumVertexOnLevel: ' + graph.numVertexOnLevel +\n             '\\n\\tNumCircleLevels: ' + graph.numCircleLevels +\n             '\\n\\tLength: ' + graph.length +\n             '\\n\\tEdges: ' + graph.edges.length +\n             '\\n\\tFaces: ' + graph.faces.length;\n    }\n  });\n};\n\n/***\n *      _____      _            _            \n *     |  __ \\    (_)          | |           \n *     | |__) | __ ___   ____ _| |_ ___  ___ \n *     |  ___/ '__| \\ \\ / / _` | __/ _ \\/ __|\n *     | |   | |  | |\\ V / (_| | ||  __/\\__ \\\n *     |_|   |_|  |_| \\_/ \\__,_|\\__\\___||___/\n *                                                                                    \n */\n\nfunction getIndex (graph, position, level) {\n  return (level === 0) ? 0 : (((level - 1) * graph.numVertexOnLevel) + position) + 1;\n}\n\nfunction getPositionLevel (graph, index) {\n\n  if (index == 0) {\n    return {\n      level: 0,\n      position: 0\n    };\n  } else {\n    return {\n      level: Math.floor(index / graph.numVertexOnLevel) + 1,\n      position: Math.floor(index % graph.numVertexOnLevel) - 1\n    };\n  }\n}\n\nfunction linkWithLevelBelowVertexes(graph, levelIndex, vertexLevelIndex){\n  var lastLevelVertexes = graph.vertices[levelIndex - 1];\n\n  if (lastLevelVertexes) {\n    var v = graph.vertices[levelIndex][vertexLevelIndex];\n    var index1 = (lastLevelVertexes.length - 1) < vertexLevelIndex     ? 0 : vertexLevelIndex;\n    var index2 = (lastLevelVertexes.length - 1) < vertexLevelIndex + 1 ? 0 : vertexLevelIndex + 1;\n\n    if (lastLevelVertexes[index1]) {\n      v.neighbours.push(lastLevelVertexes[index1]);\n      lastLevelVertexes[index1].neighbours.push(v);\n    \n      createEdge(graph, v, lastLevelVertexes[index1]); \n    }\n\n    if (index1 != index2 && lastLevelVertexes[index2]) {\n      v.neighbours.push(lastLevelVertexes[index2]);\n      lastLevelVertexes[index2].neighbours.push(v);\n      \n      createEdge(graph, v, lastLevelVertexes[index2]);\n      if (lastLevelVertexes[index1]){\n        createFace(graph, v, lastLevelVertexes[index1], lastLevelVertexes[index2]);\n      }\n    }\n  }\n}\n\nfunction linkWithLevelAboveVertexes(graph, levelIndex, vertexLevelIndex){\n  var aboveLeveVertexes = graph.vertices[levelIndex + 1];\n\n  if (aboveLeveVertexes){\n    var v = graph.vertices[levelIndex][vertexLevelIndex];\n    var index1 = vertexLevelIndex\n    var index2 = vertexLevelIndex - 1 < 0 ? graph.numVertexOnLevel - 1 : vertexLevelIndex - 1;\n\n    if (aboveLeveVertexes[index1]){\n       v.neighbours.push(aboveLeveVertexes[index1]);\n      aboveLeveVertexes[index1].neighbours.push(v);\n    \n      createEdge(graph, v, aboveLeveVertexes[index1]); \n    }\n\n    if (index1 != index2 && aboveLeveVertexes[index2]){\n      v.neighbours.push(aboveLeveVertexes[index2]);\n      aboveLeveVertexes[index2].neighbours.push(v);\n      \n      createEdge(graph, v, aboveLeveVertexes[index2]);\n\n      if (aboveLeveVertexes[index1]){\n        createFace(graph, v, aboveLeveVertexes[index1], aboveLeveVertexes[index2]);\n      }\n    }\n  }\n}\n\nfunction linkWithNeighbourVertex(graph, vertex, neigbour){\n  if (neigbour) {\n    vertex.neighbours.push(neigbour);\n    neigbour.neighbours.push(vertex);\n    createEdge(graph, vertex, neigbour);\n\n    vertex.neighbours\n          .filter(function(n){ \n            if (neigbour != n){\n              return neigbour.neighbours.includes(n); \n            }\n          }).forEach(function(n){\n            createFace(graph, vertex, neigbour, n);\n          })\n  }\n}\n\nfunction createEdge(graph, v1, v2){\n  var edge = Makrene.Edge();\n  edge.vertices.push(v1);\n  edge.vertices.push(v2);\n  edge.id = graph.edges.length;\n  graph.edges.push(edge);\n\n  v2.edges.push(edge);\n  v1.edges.push(edge);\n\n  linkEdgeWithVertexEdges(edge, v1);\n  linkEdgeWithVertexEdges(edge, v2);\n}\n\nfunction linkEdgeWithVertexEdges (edge, vertex){\n  vertex.edges.forEach(function(e){\n    if (edge != e && !edge.neighbours.includes(e)){\n      edge.neighbours.push(e);\n      e.neighbours.push(edge);\n    }\n  });\n}\n\nfunction createFace(graph, v1, v2, v3){\n  var f = Makrene.Face();\n\n  f.vertices.push(v1);\n  f.vertices.push(v2);\n  f.vertices.push(v3);\n\n  v1.faces.push(f);\n  v2.faces.push(f);\n  v3.faces.push(f);\n\n  f.id = graph.faces.length;\n  f.data = {\n    level: Math.max(\n      v1.data.level,\n      v2.data.level,\n      v3.data.level)\n  };\n  \n  graph.faces.push(f);\n\n  linkFaceWithVertexFaces(f, v1);\n  linkFaceWithVertexFaces(f, v2);\n  linkFaceWithVertexFaces(f, v3);\n\n  // Link edge with face\n  var edges = [];\n  edges.push(v1.edges.filter(function(e){ return e.vertices.includes(v2); }).first());\n  edges.push(v2.edges.filter(function(e){ return e.vertices.includes(v3); }).first());\n  edges.push(v3.edges.filter(function(e){ return e.vertices.includes(v1); }).first());\n  \n  edges.forEach(function(e){\n    e.faces.push(f);\n    f.edges.push(e);\n  });\n}\n\nfunction linkFaceWithVertexFaces(face, vertex){\n  vertex.faces.forEach(function(f){\n    if (face != f && !face.neighbours.includes(f)){\n      face.neighbours.push(f);\n      f.neighbours.push(face);\n    }\n  });\n}\n\nfunction calculateVertexDegree(graph, level, levelPos) {\n  var levelDegreeOffset =  (360/graph.numVertexOnLevel)/2;\n  return levelDegreeOffset + (levelDegreeOffset * level) + ((360/graph.numVertexOnLevel) * levelPos);\n}\n\n}());\n},{\"../base/makrene.base\":1}],4:[function(_dereq_,module,exports){\n/*global require, module */\n\nvar Makrene = _dereq_('../base/makrene.base');\n\nvar Dir = {\n  Top     : 0,\n  Right   : 1,\n  Bottom  : 2,\n  Left    : 3,\n\n  TopLeft     : 0,\n  TopRight    : 1,\n  BottomRight : 2,\n  BottomLeft  : 3\n};\n\nmodule.exports = function(config){\n  config = config || {};\n\n  var graph = Object.assign(Makrene.Graph(), {\n\n    rows: config.rows || 0,\n    cols: config.cols || 0,\n\n    init: function(){\n      graph.createVertexes();\n      graph.linkVertexes();\n\n      graph.createEdges();\n      graph.linkEdges();\n\n      graph.createFaces();\n      graph.linkFaces();\n    },\n\n    createVertexes: function(){\n      for (var r = graph.rows - 1; r >= 0; r--) {\n        graph.vertices[r] = [];\n        for (var c = graph.cols - 1; c >= 0; c--) {\n          var v = Makrene.Vertex();\n\n          v.data.row = r;\n          v.data.col = c;\n\n          graph.vertices[r][c] = v;\n        }\n      }\n    },\n\n    linkVertexes: function(){\n      graph.forEach(function(vertex, row, col){\n\n        if (col > 0){\n          vertex.neighbours[Dir.Left] = graph.vertices[row][col - 1];\n        }\n\n        if (col < graph.cols -1) {\n          vertex.neighbours[Dir.Right] = graph.vertices[row][col + 1];\n        }\n\n        if (row > 0){\n          vertex.neighbours[Dir.Top] = graph.vertices[row - 1][col];\n        }\n\n        if (row < graph.rows -1){\n          vertex.neighbours[Dir.Bottom] = graph.vertices[row + 1][col];\n        }\n\n      });\n    },\n\n    createEdge: function(v1, v2){\n      var edge = Makrene.Edge();\n      edge.vertices.push(v1);\n      edge.vertices.push(v2);\n\n      graph.edges.push(edge);\n\n      v2.edges.push(edge);\n      v1.edges.push(edge);\n    },\n\n    createEdges: function(){\n      graph.forEach(function(vertex){\n        if (vertex.neighbours[Dir.Left]) {\n          graph.createEdge(vertex, vertex.neighbours[Dir.Left]);\n        }\n\n        if (vertex.neighbours[Dir.Top]) {\n          graph.createEdge(vertex, vertex.neighbours[Dir.Top]);\n        }\n      });\n    },\n\n    linkEdges: function(){\n      graph.edges.forEach(function(edge) {\n        edge.vertices.forEach(function(vertex) {\n          vertex.edges.forEach(function(neighbour){\n            if (edge != neighbour) {\n              edge.neighbours.push(neighbour);\n            }\n          });\n        });\n      });\n    },\n\n    createFace: function(v1, v2, v3, v4){\n      var edges = [];\n\n      v1.edges.forEach(function(edge){\n        if (edge.vertices.includes(v2) || edge.vertices.includes(v3)){\n          edges.push(edge);\n        }\n      });\n\n      v4.edges.forEach(function(edge){\n        if (edge.vertices.includes(v2) || edge.vertices.includes(v3)){\n          edges.push(edge);\n        }\n      });\n\n      var face = Makrene.Face();\n\n      face.vertices[Dir.TopRight]    = v3;\n      face.vertices[Dir.TopLeft]     = v4;\n      face.vertices[Dir.BottomLeft]  = v2;\n      face.vertices[Dir.BottomRight] = v1;\n\n      graph.faces.push(face);\n\n      v1.faces.push(face)\n      v2.faces.push(face)\n      v3.faces.push(face)\n      v4.faces.push(face)\n\n      edges.forEach(function(edge){\n        face.edges.push(edge);\n        edge.faces.push(face);\n      });\n    },\n\n    createFaces: function(){\n      graph.forEach(function(vertex){\n        if (vertex.neighbours[Dir.Left]\n         && vertex.neighbours[Dir.Top]) {\n\n          graph.createFace(\n            vertex,\n            vertex.neighbours[Dir.Left],\n            vertex.neighbours[Dir.Top],\n            vertex.neighbours[Dir.Top]\n                  .neighbours[Dir.Left]);\n        }\n      });\n    },\n\n    linkFaces: function(){\n      graph.faces.forEach(function(face) {\n        face.vertices.forEach(function(vertex) {\n          vertex.faces.forEach(function(neighbour){\n            if (face != neighbour) {\n              face.neighbours.push(neighbour);\n            }\n          });\n        });\n      });\n    },\n\n    forEach: function(fn){\n      for (var r = graph.rows - 1; r >= 0; r--) {\n        for (var c = graph.cols - 1; c >= 0; c--) {\n          fn(graph.vertices[r][c], r, c);\n        }\n      }\n    }\n  })\n\n  graph.init();\n\n  return graph;\n};\n\n},{\"../base/makrene.base\":1}],5:[function(_dereq_,module,exports){\n/*global module */\n\nmodule.exports = function(){\n\n  var ki = {\n    init: function(circle){\n      circle.forEach(function(v){\n        v.data.degree = v.data.degree % 360;\n        v.data.Orginaldegree = v.data.degree;\n        v.data.OrginalLevel= v.data.level;\n      });\n    },\n\n    step: function(circle){\n      circle.forEach(function(v){\n\n        // goto orginal angle\n        var a1 = v.data.Orginaldegree;\n        var a2 = v.data.degree ;\n        var angle = 180 - Math.abs(Math.abs(a1 - a2) - 180);\n\n        if (Math.abs(angle) >= 1) {\n          var angle2 = 180 - Math.abs(Math.abs((a1+1) - a2) - 180);\n          v.data.degree += angle2 > angle ? 1 : -1;\n          v.data.degree = v.data.degree % 360;\n        }\n\n        // goto orginal level\n        var l1 = v.data.OrginalLevel;\n        var l2 = v.data.level;\n\n        if (Math.abs(l1 - l2) > 0.1) {\n          v.data.level += l1 > l2 ? +0.1 : -0.1;\n        }\n\n      });\n    }\n  };\n\n  return ki;\n};\n\n},{}],6:[function(_dereq_,module,exports){\n/*global module */\n\nvar Search = {\n\n  DephFirstSearch: function(vertex, distance, visited){\n    visited = visited || [];\n    var newVisited = [];\n    newVisited.pushArray(visited);\n    if (!visited.includes(vertex) && distance>0) {\n      newVisited.push(vertex);\n      vertex.visit();\n      vertex.neighbours.forEach(function(neighbour){\n        if (neighbour) {\n          Search.DephFirstSearch(neighbour, distance - 1, newVisited);\n        }\n      });\n    }\n  },\n\n  BreadthFirstSearch: function (vertices, distance, visited) {\n    visited = visited || [];\n\n    if (distance > 0) {\n      var nextvertices = [];\n\n      vertices.forEach(function(vertex){\n        if (vertex) {\n          visited.push(vertex);\n          vertex.visit();\n          for (var i = vertex.neighbours.length - 1; i >= 0; i--) {\n            if (!visited.includes(vertex.neighbours[i])) {\n              nextvertices.push(vertex.neighbours[i]);\n            }\n          }\n        }\n      })\n\n      Search.BreadthFirstSearch(nextvertices, distance - 1, visited);\n    }\n  },\n\n  BreadthFirstSearchIterate: function (circle, vertices, visited) {\n    visited = visited || [];\n\n    if (visited.length === 0) {\n      circle.forEach(function(vertex){\n        vertex.data.visited   = false;\n        vertex.data.lastVisit = Number.MAX_VALUE;\n      });\n    }\n\n    if (vertices.length != 0) {\n      var nextvertices = [];\n\n      vertices.forEach(function(vertex){\n        if (vertex) {\n\n          visited.push(vertex);\n          vertex.data.visited   = true;\n          vertex.data.lastVisit = Date.now();\n\n          vertex.neighbours.forEach(function(neighbour){\n            if (neighbour && !neighbour.data.visited && !nextvertices.includes(neighbour)) {\n              nextvertices.push(neighbour);\n            }\n          })\n        }\n      });\n\n      return {\n        visited      : vertices,\n        visitedAll   : visited,\n        nextvertices : nextvertices,\n\n        next : function () {\n          return Search.BreadthFirstSearchIterate(circle, nextvertices, visited);\n        }\n      };\n    }\n  }\n};\n\nmodule.exports = Search;\n\n},{}],7:[function(_dereq_,module,exports){\n/*global require, module */\n\nvar base = _dereq_('./makrene.visualizer');\n\nmodule.exports = function (context, circle, config) {\n\n  var offsetX = (config.width  - config.vertexWidth ) / 2;\n  var offsetY = (config.height - config.vertexHeight) / 2;\n\n  base(context,\n    circle,\n    config,\n    function(v) {\n      return offsetX + ((Math.cos(v.data.degree * 0.0174532925) * (v.data.level * config.levelOffset)) + config.vertexWidth  / 2);\n    },\n    function(v) {\n      return offsetY + ((Math.sin(v.data.degree * 0.0174532925) * (v.data.level * config.levelOffset)) + config.vertexHeight / 2);\n    });\n};\n\n},{\"./makrene.visualizer\":10}],8:[function(_dereq_,module,exports){\n/*global require, module */\n\nvar base = _dereq_('./makrene.visualizer');\n\n/**\n *  This visualizer draws a Makrene.Circle, from the center of the canvas, to the edges\n *  of the canvas. The outer ring of the circle will be drag out to the edges of the canvas \n *  rectangle. This gives a special effect of filled space. By default each ring, will be\n *  spaced equally to the outer edge. \n *\n *   -------B-------\n *   |     / \\     | \n *   A----5---6----C\n *   | \\ / \\ / \\ / |\n *   |  4---1---7  |\n *   | / \\ / \\ / \\ |  \n *   9----3---2----D\n *   |     \\ /     |\n *   -------8-------\n *\n *  @public\n *  @param {RenderingContext} context   - The canvas 2d rendering context.\n *  @param {Makrene.Circle} circle      - the circle structure\n *  @param {object} config              - The settings\n *  @param {number} config.width        - The width of the screen\n *  @param {number} config.height       - The height of the screen\n *  @param {number} config.levelOffset  - The space between each level\n *  @param {number} config.vertexWidth  - The width of each vertex box\n *  @param {number} config.vertexHeight - The height of each vertex box\n *  @param {string} config.lineColor    - The color of the lines\n *  @param {string} config.vertexColor  - The color of each vertex box\n *  @param {number} config.lineWidth    - The width of each line\n *  @return {undefined}\n */\nmodule.exports = function (context, circle, config) {\n\n  var offsetX = (config.width  - config.vertexWidth ) / 2;\n  var offsetY = (config.height - config.vertexHeight) / 2;\n\n  config.levelOffset = config.levelOffset || (config.width/2)/circle.numCircleLevels;\n\n  base(context,\n    circle,\n    config,\n    function(v) {\n      return (v.data.level == circle.numCircleLevels) \n      ? edgeOfView(config, v.data.degree).x\n      : offsetX + ((Math.cos(v.data.degree * 0.0174532925) * (v.data.level * config.levelOffset)) + config.vertexWidth  / 2);\n    },\n    function(v) {\n      return (v.data.level == circle.numCircleLevels)\n      ? edgeOfView(config, v.data.degree-180).y\n      : offsetY + ((Math.sin(v.data.degree * 0.0174532925) * (v.data.level * config.levelOffset)) + config.vertexHeight / 2);\n    });\n};\n\n/**\n *  The edgeOfView() method finds the point on the rectangle by degree from the middle point.\n *\n *  -------------X------\n *  |           /      |                Given an 2d rectangle with width and height, find the \n *  |          / 45°   |                x and y position, on the border of the rectangle, by an given\n *  |         /________| height         angle from the center of the rectangle.\n *  |                  |\n *  |                  |\n *  --------------------\n *          width\n *\n *  @link https://stackoverflow.com/questions/4061576/finding-points-on-a-rectangle-at-a-given-angle/31886696\n *  @remarks Solution was found as always on stackoverflow :P\n *  \n *  Syntax:\n *  var point = edgeOfView({ height: 100, width: 40 }, 45);\n *  console.log(point.x, point.y);  \n *\n *  @private\n *  @param {object} rect        - the rectangle box, on which to find the point by degree\n *  @param {nubmer} rect.height - the height of the rectangle\n *  @param {nubmer} rect.width  - the width of the rectangle\n *  @param {nubmer} deg         - the degree from the center to find the point\n *  @return {object}            - The point with x, y coordinates.\n */\nfunction edgeOfView (rect, deg) {\n\n  var twoPI = Math.PI*2;\n  var theta = deg * Math.PI / 180;\n  \n  while (theta < -Math.PI) {\n    theta += twoPI;\n  }\n  \n  while (theta > Math.PI) {\n    theta -= twoPI;\n  }\n  \n  var rectAtan = Math.atan2(rect.height, rect.width);\n  var tanTheta = Math.tan(theta);\n  var region;\n  \n  if ((theta > -rectAtan) && (theta <= rectAtan)) {\n      region = 1;\n  } else if ((theta > rectAtan) && (theta <= (Math.PI - rectAtan))) {\n      region = 2;\n  } else if ((theta > (Math.PI - rectAtan)) || (theta <= -(Math.PI - rectAtan))) {\n      region = 3;\n  } else {\n      region = 4;\n  }\n  \n  var edgePoint = {x: rect.width/2, y: rect.height/2};\n  var xFactor = 1;\n  var yFactor = 1;\n  \n  switch (region) {\n    case 1: yFactor = -1; break;\n    case 2: yFactor = -1; break;\n    case 3: xFactor = -1; break;\n    case 4: xFactor = -1; break;\n  }\n  \n  if ((region === 1) || (region === 3)) {\n    edgePoint.x += xFactor * (rect.width / 2.);\n    edgePoint.y += yFactor * (rect.width / 2.) * tanTheta;\n  } else {\n    edgePoint.x += xFactor * (rect.height / (2. * tanTheta));\n    edgePoint.y += yFactor * (rect.height /  2.);\n  }\n  \n  return edgePoint;\n}\n\n},{\"./makrene.visualizer\":10}],9:[function(_dereq_,module,exports){\n/*global require, module */\n\nvar base = _dereq_('./makrene.visualizer');\n\nmodule.exports = function (context, circle, config) {\n\n  base(context,\n    circle,\n    config,\n    function(v) {\n      return config.offset + (((config.vertexWidth + config.margin) * v.data.col) + config.vertexWidth/2);\n    },\n    function(v) {\n      return config.offset + (((config.vertexHeight + config.margin ) * v.data.row) + config.vertexHeight/2);\n    });\n};\n\n},{\"./makrene.visualizer\":10}],10:[function(_dereq_,module,exports){\n/*global module */\n\nmodule.exports = function(context, graph, config, getPosX, getPosY){\n\n  config = Object.assign({\n\n   /**\n    *  The width of the screen\n    *  @type {number}\n    */\n    width: 100,\n\n   /**\n    *  The height of the screen\n    *  @type {number}\n    */\n    height: 100,\n    \n   /**\n    *  The space between each level\n    *  @type {number}\n    */\n    levelOffset: 10,\n    \n   /**\n    *  The width of each vertex box\n    *  @type {number}\n    */\n    vertexWidth: 100,\n    \n   /**\n    *  The height of each vertex box\n    *  @type {number}\n    */\n    vertexHeight: 100,\n    \n   /**\n    *  The color of the lines\n    *  @type {number}\n    */\n    lineColor: 100,\n    \n   /**\n    *  The color of each vertex box\n    *  @type {number}\n    */\n    vertexColor: 100,\n    \n   /**\n    *  The width of each line\n    *  @type {number}\n    */\n    lineWidth: 100,\n\n    /**\n     *  Draw faces\n     *  @type {bool}\n     */\n     drawFaces: true,\n\n    /**\n     *  Draw edges\n     *  @type {bool}\n     */\n     drawEdges: true,\n\n    /**\n     *  Draw vertices\n     *  @type {bool}\n     */\n     drawVertices: true,\n\n    /**\n     *  Draw faces\n     *  @type {bool}\n     */\n     drawFacesDebugText: false,\n\n    /**\n     *  Draw faces\n     *  @type {bool}\n     */\n     drawEdgesDebugText: false,\n\n    /**\n     *  Draw faces\n     *  @type {bool}\n     */\n     drawVertexDebugText: false\n\n  }, config);\n\n  getPosX = getPosX || function (v) {\n    if (v.data.x)\n      return v.data.x;\n    v.data.x = Math.random() * config.width;\n    return v.data.x;\n  }\n\n  getPosY = getPosY || function (v) {\n    if (v.data.y)\n      return v.data.y;\n    v.data.y = Math.random() * config.height;\n    return v.data.y;\n  }\n\n  if (config.drawFaces) {\n    // draw Faces\n    graph.faces.forEach(function(face){\n      context.beginPath();\n      context.fillStyle = 'rgba(0,0,0,0.2)';\n      var vertex = face.vertices[0];\n      context.moveTo(getPosX(vertex), getPosY(vertex));\n      face.vertices.forEach(function(vertex){\n        context.lineTo(getPosX(vertex), getPosY(vertex));\n      })\n      context.fill();\n    })\n  }\n\n  if (config.drawEdges) {\n    // draw Edges\n    graph.edges.forEach(function(edge){\n      context.beginPath();\n      context.lineWidth = config.lineWidth;\n      context.strokeStyle = config.lineColor;\n      var v1 = edge.vertices[0];\n      var v2 = edge.vertices[1];\n      context.moveTo(getPosX(v1), getPosY(v1));\n      context.lineTo(getPosX(v2), getPosY(v2));\n      context.stroke();\n    });\n  }\n\n  if (config.drawVertices) {\n    // draw vertexes\n    graph.forEach(function(v){\n      if (v){\n        context.beginPath();\n        context.fillStyle = config.vertexColor;\n        context.fillRect(\n          getPosX(v) - config.vertexWidth/2,\n          getPosY(v) - config.vertexHeight/2,\n          config.vertexWidth,\n          config.vertexHeight);     \n      }\n    });\n  }\n\n  if (config.drawVertexDebugText) {\n    // Draw text\n    graph.forEach(function(v){\n      if (v){\n        drawText(\n          context, \n          'i' + v.id +\n          'n' + v.neighbours.length + \n          'e' + v.edges.length + \n          'f' + v.faces.length,\n          getPosX(v),\n          getPosY(v),\n          'red');\n      }\n    });\n  }\n\n  if (config.drawEdgesDebugText) {\n    graph.edges.forEach(function(edge){\n      var v1 = edge.vertices[0];\n      var v2 = edge.vertices[1];\n      drawText(\n        context,\n        'i' + edge.id +\n        'n' + edge.neighbours.length + \n        'v' + edge.vertices.length + \n        'f' + edge.faces.length,\n        getPosX(v1) + (getPosX(v2)- getPosX(v1))/2,\n        getPosY(v1) + (getPosY(v2) - getPosY(v1))/2,\n        'blue');\n    });\n  }\n\n  if (config.drawFacesDebugText) {\n    graph.faces.forEach(function(face){\n      var centerX = (getPosX(face.vertices[0]) + getPosX(face.vertices[1]) + getPosX(face.vertices[2])) / 3;\n      var centerY = (getPosY(face.vertices[0]) + getPosY(face.vertices[1]) + getPosY(face.vertices[2])) / 3;\n      \n      drawText(\n        context,\n        'i' + face.id +\n        'n' + face.neighbours.length + \n        'v' + face.vertices.length + \n        'e' + face.edges.length,\n        centerX,\n        centerY,\n        'black')\n    });\n  }\n};\n\nfunction drawText(context, content, x, y, color){\n  var lineHeight=context.measureText('M').width;\n  var width = context.measureText(content).width;\n  var padding = 2;\n  context.fillStyle = 'white';\n  context.fillRect(\n    (x - (width/2)) - padding,  \n    (y - (lineHeight/2)) - padding, \n    width + (padding *2), \n    lineHeight + (padding*2));\n\n  context.strokeStyle = context.fillStyle = color;\n  context.fillText(content, x - (width/2), y + (lineHeight/2));\n}\n},{}],11:[function(_dereq_,module,exports){\n// Polyfils\n\n/**\n *  Object.assign polyfil\n *  @by https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\nif (typeof Object.assign != 'function') {\n  (function () {\n    Object.assign = function (target) {\n      'use strict';\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (source.hasOwnProperty(nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n      return output;\n    };\n  })();\n}\n\n/**\n *  Array.prototype.includes polyfil\n *  @by https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\n */\nif (!Array.prototype.includes) {\n  Array.prototype.includes = function(searchElement /*, fromIndex*/ ) {\n    'use strict';\n    var O = Object(this);\n    var len = parseInt(O.length) || 0;\n    if (len === 0) {\n      return false;\n    }\n    var n = parseInt(arguments[1]) || 0;\n    var k;\n    if (n >= 0) {\n      k = n;\n    } else {\n      k = len + n;\n      if (k < 0) {k = 0;}\n    }\n    var currentElement;\n    while (k < len) {\n      currentElement = O[k];\n      if (searchElement === currentElement ||\n         (searchElement !== searchElement && currentElement !== currentElement)) { // NaN !== NaN\n        return true;\n      }\n      k++;\n    }\n    return false;\n  };\n}\n\n// My Polyfills\n\nif (!Array.prototype.first) {\n  Array.prototype.first = function(){\n    return this[0];\n  }\n}\n},{}]},{},[2])\n(2)\n});"],"sourceRoot":"/source/"}